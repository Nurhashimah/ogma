- model_class = LocationDamage
.page-header
  %h1= t('location.damage.list')#, :default => model_class.model_name.human.pluralize

.row  
  .navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
    %ul.nav.navbar-nav
      //%li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'new'))), new_student_tenant_path
    %ul.nav.navbar-nav.navbar-right
      %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar"
      %li.dropdown
        %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
          = fa_icon "external-link", text: (t 'actions.export')
          %b.caret
        %ul.dropdown-menu
          %li= link_to (fa_icon "file-excel-o", text: (t 'location.damage.report')), campus_location_damages_path(params.merge(format: 'xls')) 
          %li= link_to  (fa_icon "file-pdf-o", text: (t 'location.damage.report')), damage_report_campus_location_damages_path(params.merge(format: 'pdf' ))
          / Erick Alvarez over 2 years ago(railscast #362) : You can use - link_to "Excel", user_contacts_path(params.merge(format: 'xls')), and this will maintain the current parameters you have plus the ones you add or edit inside merge.

.row
  .col-md-12
    .alert.alert-warning
      %strong=(t 'remarks')+" :"
      %ol
        %li=(t 'location.damage.room_desc').html_safe
        %li=(t 'location.damage.asset_others_desc').html_safe
        %li=(t 'location.damage.report_by_type').html_safe
        %ol
          %li=(t 'location.damage.room_report').html_safe
          %li 
            =(t 'location.damage.asset_others_report1').html_safe
            %button.btn.btn-default.btn-xs
              %i.fa.fa-bug
            =t 'location.damage.asset_others_report2'
        %li=(t 'location.damage.asset_inventory').html_safe

  %table.table-striped.table-hover.ogma
    %thead
      %tr
        %th No
        %th= t 'location.combo_code'
        %th= t 'student.tenant.damage_type'
        %th= "#{(t 'location.damage.description')} - #{(t 'location.damage.matching_asset')} "
        %th= t 'location.damage.reported_on'
        %th= t 'location.damage.repaired_on'
        %th= t 'student.tenant.name'
    
    %tbody
    = render "index_search"
    - no=0
    - @damages.group_by(&:location).each do |alocation, damages|
      - span=damages.count
      - damages.each_with_index do |damage, count|
        %tr
          %td=no+=1
          - if count==0
            %td.centre{rowspan: "#{span}", style: "vertical-align: middle;"}= link_to damage.location.try(:combo_code), campus_location_path(damage.location)
          %td= link_to damage.damage_type, campus_location_damage_path(damage)
          %td
            = damage.description
            = link_to " - #{damage.asset.assetcode}", asset_asset_path(damage.asset) rescue nil
          %td= l(damage.reported_on) unless damage.reported_on.nil?
          %td= l(damage.repaired_on) unless damage.repaired_on.nil?
          %td= damage.tenant.try(:student).try(:name) unless damage.user_id.nil?

  .right{style:"padding:0 30px; margin:0;"}= paginate @damages, :theme => 'twitter-bootstrap-3'