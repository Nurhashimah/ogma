- model_class = Book
.page-header
  %h1= t('library.book.list')
= render 'shared/flashes'
  
.navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
  %ul.nav.navbar-nav
    %li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'actions.new'))), new_library_book_path
  %ul.nav.navbar-nav
    %li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'actions.import_excel'))), import_excel_library_books_path     
  %ul.nav.navbar-nav.navbar-right
    %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "toga"		#bogus first
    %li= link_to content_tag(:li, fa_icon("print", text: (t 'actions.print'))), "#", class: 'bogus'

.row
  %table.table-striped.table-hover.ogma
    %thead
      %tr
        %th= sort_link(@search, :mediatype, (t 'library.book.mediatype'))
        %th= t 'library.book.image'
        %th= sort_link(@search, :title,(t 'library.book.title'))
        %th= sort_link(@search, :author, (t 'library.book.author'))
        %th= sort_link(@search, :isbn, (t 'library.book.isbn'))
        %th= t 'library.book.quantity'
        %th= sort_link(@search, :accessionno, (t 'library.book.accessionno'))
        %th= sort_link(@search, :classlcc, (t 'library.book.classlcc'))
        %th= sort_link(@search, :location, (t 'library.book.location'))
        %th= sort_link(@search, :status, (t 'library.book.status'))
        %th{:style=>"width: 10px;"}= t 'library.book.require_update'
        /Physical Description - amendment required
    
    %tbody
      = render "index_search"
      - @books.each do |book|
        - if book.accessions.count != 0 
          - book.accessions.each_with_index do |accession_item, index|
            %tr
              %td=h (DropDown::MEDIA.find_all{|disp, value| value == book.mediatype}).map {|disp, value| disp}[0] 
              %td
                - if book.photo_file_name == nil
                  =t 'book.no_image'
                - else
                  =image_tag book.photo.url, :class =>'list-image'
              %td=h link_to book.title, library_book_path(book)    
              %td=h book.author
              %td=h book.isbn
              %td{:style=>"text-align: center;"}=h book.book_quantity if index == 0
              %td{:style=>"text-align: center;"}=h accession_item.accession_no
              %td=h book.classlcc
              %td=h book.location
              %td{:style=>"text-align: center;"}=h (DropDown::STATUS.find_all{|disp, value| value == book.status}).map {|disp, value| disp}[0]
              %td{:style=>"text-align: center;"}
                /2Apr2013-check roman column, if data already distribute into 3 columns:roman, size & pages
                - if book.roman != nil 
                  - if book.roman.include?(';') || book.roman.include?(':') || book.roman.include?(',')
                    &#10003;

        - else 
          /one copy for each title
          %tr
            %td=h (DropDown::MEDIA.find_all{|disp, value| value == book.mediatype}).map {|disp, value| disp}[0]
            %td
              - if book.photo_file_name == nil
                =t 'book.no_image'
              - else
                =image_tag book.photo.url, :class =>'list-image'
            %td=h link_to book.title, library_book_path(book)
            %td=h book.author
            %td=h book.isbn
            %td{:style=>"text-align: center;"}=h book.book_quantity
            %td{:style=>"text-align: center;"}
              - if book.accessions.count <= 0 #temporary display from books table
                =h book.accessionno
              - else
                =book.accessions.first.accession_no
            %td=h book.classlcc
            %td=h book.location
            %td{:style=>"text-align: center;"}=h (DropDown::STATUS.find_all{|disp, value| value == book.status}).map {|disp, value| disp}[0]
            %td{:style=>"text-align: center;"}
              /2Apr2013-check roman column, if data already distribute into 3 columns:roman, size & pages
              - if book.roman != nil 
                - if book.roman.include?(';') || book.roman.include?(':') || book.roman.include?(',')
                  &#10003;
                        
  .right{style:"padding:0 30px; margin:0;"}= paginate @books, :theme => 'twitter-bootstrap-3'

:javascript
  
$(document).ready(function(){
  $('.toga').click(function() {
    $('.search_row').toggle(); 
  });
})
