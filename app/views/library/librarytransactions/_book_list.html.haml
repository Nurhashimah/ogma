- if @existing_library_transactions.empty?
  #no_books
    %h4 No Results
  #insert_book_details
- else
  .row
    .col-sm-2.table_title= t 'book.accession_no'
    .col-sm-6.table_title= t 'book.title'
    .col-sm-2.table_title= t 'library.transaction.returnduedate'
    .col-sm-1.table_title= t 'library.transaction.return'
    .col-sm-1.table_title= t 'library.transaction.cancel'
  
  - @existing_library_transactions.each do | transaction |
    - if transaction.returnduedate < Date.today.yesterday && transaction.returneddate.blank?; @style = "overdue"; else; @style = "plain"; end
    #insert_book_details
    .row{:class => @style, :id => "row_#{transaction.id}"}
      .col-sm-2= transaction.try(:accession).try(:accession_no)
      .col-sm-6= link_to transaction.try(:accession).try(:book).try(:title), '#', class: "bogus"
      .col-sm-2= transaction.returnduedate
      .col-sm-1
        /=link_to "RETURN", library_librarytransaction_path(transaction), method: :update, remote: true
        - @librarytransaction=transaction
        = form_for [:library, @librarytransaction], remote: true, :html => { :class => 'edit_loan' } do |f|
          =f.hidden_field :id, :value => transaction.id
          =f.check_box :returned
          =f.hidden_field :returneddate, :value => Date.today
          =f.submit
      .col-sm-1
        /=link_to "(return book)", library_librarytransaction_path(@transaction_id), method: :delete, remote: true
        =link_to content_tag(:i, "", class: "fa fa-trash-o"),  library_librarytransaction_path(transaction), method: :delete, remote: true
        
        
/ :javascript
/   $('.edit_loan input[type=submit]').remove();
/   $('.edit_loan input[type=checkbox]').click(function(){
/     /*alert("Nak return!"); */
/     $(this).parent('form').submit();
/   });
/   
  
