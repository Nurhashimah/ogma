- @special = @count1
- @special2 = @count2
/PART A - timeslots WITHOUT VALUES
/---------------------------------
/1a-available time slots - Sun-Wed
- atsw=all_timeslot_sun_wed = @timeslot.pluck(:sequence)
- rev_all_timeslot_sun_wed = atsw+atsw.map{|x|x+=@special}+atsw.map{|x|x+=(@special*2)}+atsw.map{|x|x+=(@special*3)}

/1b-available time slots - Thurs
- all_timeslot_thurs = @timeslot2.pluck(:sequence)
- rev_all_timeslot_thurs = all_timeslot_thurs.map{|x|x+@count1}

/1c-available time slots - Weekends
- if daycount_check==1
  /- rev_all_timeslot_weekend = atsw.map{|x|x+=(@special*4)}
  - rev_all_timeslot_weekend = atsw.map{|x|x+=(7*4+5)}
- elsif daycount_check==2
  /= rev_all_timeslot_weekend = [34,36,37,39,40,41,43,44,46,47]
  - rev_all_timeslot_weekend = atsw.map{|x|x+=(7*4+5)}+atsw.map{|x|x+=(7*5+5)}
  /atsw.map{|x|x+=(@special*4)}+atsw.map{|x|x+=(@special*5)}

/2a-START-existing time slot - Sun-Wed
- exist_timeslot_sun_wed = @weeklytimetable.weeklytimetable_details.where('time_slot2 !=? and (day2!=? or day2!=?)',0,5,6).pluck(:time_slot2)
- exist_day2_sun_wed = @weeklytimetable.weeklytimetable_details.where('day2 !=? and (day2!=? or day2!=?)',0,5,6).pluck(:day2)

/rev_exist_slot = revised all existing slot, sample : weeklytimetable ID = 4
/(eg. 4 days with 7 timeslot => [1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 27, 28])
- rev_exist_slot=[]
- 0.upto(exist_timeslot_sun_wed.count-1) do |ind_slot_day|
  - if exist_day2_sun_wed[ind_slot_day] == 1
    - rev_exist_slot<<exist_timeslot_sun_wed[ind_slot_day]
  - else 
    - rev_exist_slot<<exist_timeslot_sun_wed[ind_slot_day]+@special*(exist_day2_sun_wed[ind_slot_day]-1)
/2a-END-existing time slot - Sun-Wed

/2c-START-existing time slot - Weekends
- exist_timeslot_1stday_weekend = @weeklytimetable.weeklytimetable_details.where('day2=?',6).pluck(:time_slot2) 
- exist_timeslot_2ndday_weekend = @weeklytimetable.weeklytimetable_details.where('day2=?',7).pluck(:time_slot2) 
- exist_timeslot_weekend = exist_timeslot_1stday_weekend+exist_timeslot_2ndday_weekend.map{|y|y+=7}
- exist_day2_weekend = @weeklytimetable.weeklytimetable_details.where('day2=? or day2=?',6,7).pluck(:day2)

- rev_exist_slot_weekend=[]
- if exist_timeslot_weekend.count>0
  - 0.upto(exist_timeslot_weekend.count-1) do |ind_slot_weekend|
    - if exist_day2_weekend==[]
      nothing yet
    - elsif exist_day2_weekend[ind_slot_weekend] == 1
      - rev_exist_slot_weekend<<exist_timeslot_weekend[ind_slot_weekend] 
    - else
      - rev_exist_slot_weekend<<exist_timeslot_weekend[ind_slot_weekend]+(@special*4)+(@count2)

/2c-END-existing time slot - Weekends

/2b-existing time slots - Thurs
- exist_timeslot_thurs = @weeklytimetable.weeklytimetable_details.where('time_slot !=?',0).pluck(:time_slot)
- exist_day2_thurs = 0

/3a-empty time slots - Sun-Wed
- empty_slot= rev_all_timeslot_sun_wed - rev_exist_slot

/3b-nothing to define

/3c-empty time slots - Weekends
- if daycount_check==1 || daycount_check==2
  - if exist_timeslot_weekend.count>0
    - empty_slot_weekend = rev_all_timeslot_weekend - rev_exist_slot_weekend
  - else
    - empty_slot_weekend = rev_all_timeslot_weekend

/4a-display EMPTY FIELDS for Sun - Wed 
- 0.upto(empty_slot.count-1) do |ind_empty|
  - if empty_slot[ind_empty]==colno+(rowno-1)*@special && (empty_slot[ind_empty]>=rowno && empty_slot[ind_empty]<=rowno*@special)
    = render 'sstab_class_edit',{:rowno=>rowno,:colno=>colno}

/4b-display EMPTY FIELDS for Thursday
- if exist_timeslot_thurs.include?(colno+@count1)==false && rowno==exist_day2_thurs  
  = render 'sstab_class_edit', {:rowno=>rowno,:colno=>colno}
 
/4c-display EMPTY FIELDS for Weekends
- if daycount_check==1 || daycount_check==2
  - 0.upto(empty_slot_weekend.count-1) do |ind_empty_weekend|
    - if empty_slot_weekend[ind_empty_weekend]==33+(rowno-6)*7+colno
      = render 'sstab_class_edit',{:rowno=>rowno,:colno=>colno}
 
/PART B - timeslots WITH VALUES - note, in (xx.day2!=5 || xx.day2!=6) => 0:Thurs, 1-4:Sun-Wed, 5:Friday, 6:Saturday
/-------------------------------------------------------------------------------------------------------------------
- @weeklytimetable.weeklytimetable_details.each do |xx|
  - if (xx.day2 == rowno && xx.time_slot2 == colno && (xx.day2!=6 || xx.day2!=7)) || (xx.is_friday == true && rowno==0 && xx.time_slot == @count1+colno) || ( xx.time_slot2 == colno && (xx.day2==rowno))
    /(xx.day2==rowno))
    / && (rowno==xx.day2+1)) 
    = render 'sstab_class_edit2', {:xx=>xx,:rowno=>rowno,:colno=>colno}
    /- if xx.weeklytimetable_topic.ancestry_depth == 4 
    /= xx.weeklytimetable_topic.parent.parent.code
    /%br= xx.weeklytimetable_topic.parent.name
    /- else
    /= xx.weeklytimetable_topic.parent.code
    /%br= xx.weeklytimetable_topic.name
    /= xx.weeklytimetable_lecturer.name
    /%br= xx.weeklytimetable_location.name
    /= "(K)" if xx.lecture_method == 1
    /= "(T)" if xx.lecture_method == 2
    /= "(A)" if xx.lecture_method == 3
    /%br  
    /UNREMARK above line to display details
