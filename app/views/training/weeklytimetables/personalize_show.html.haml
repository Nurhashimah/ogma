- model_class = Weeklytimetable
.page-header
  %h1=t 'training.weeklytimetable.personalize_timetable'
  
= render 'shared/flashes'
.row
  .col-md-offset-1
    / Nav tabs
    %ul.nav.nav-tabs
      /%li.active= link_to ((t 'training.weeklytimetable.details')),"#weeklytimetable_details", "data-toggle" => "tab"
      %li.active= link_to ((t 'training.weeklytimetable.daily_details')), "#daily_details", "data-toggle" => "tab"
    .tab-content{style:"padding-top:1em"}
      .col-md-8.col-md-offset-1
        %dl.dl-horizontal
          - detailing=[]
          - detailing_monthurs=[]
          - detailing_friday=[]
          - @personalize.each do |sdate, items2|

            - comb_wt_status=""
            - items2.map(&:id).uniq.each do |x|
              - if sdate.to_s == @selected_date.to_s
                - status=(Weeklytimetable.find(x).hod_approved? ? "<span style='font-weight: bold;'>"+(t 'approved')+"</span>" : "<span style='color: grey;'>"+(t 'not_approved')+"</span>")
                - comb_wt_status+=(Weeklytimetable.find(x).schedule_programme.programme_list+" - "+status+"<br>") 
              
            - items2.each_with_index do |item, index|
              - if sdate.to_s == @selected_date.to_s
                /- if index == 0
                - if index == items2.count-1
                  %dt= t 'training.weeklytimetable.lecturer_name'
                  %dd=h @test_lecturer.userable.rank_id? ? @test_lecturer.userable.staff_with_rank : @test_lecturer.userable.name
      
                  %dt= t 'training.weeklytimetable.startdate' , :default => model_class.human_attribute_name(:startdate) + ":"
                  %dd=h item.try(:startdate).try(:strftime, "%d-%m-%Y") 
  
                  %dt= t 'training.weeklytimetable.enddate' , :default => model_class.human_attribute_name(:enddate) + ":"
                  %dd=h item.try(:enddate).try(:strftime, "%d-%m-%Y")
                  
                  %dt= (t 'training.weeklytimetable.programme_id')+" / Status"
                  %dd{style: 'padding-left: 70px;'}=comb_wt_status.html_safe

                - item.weeklytimetable_details.each do |h| 
                  - if h.lecturer_id == @test_lecturer.userable_id
                    - detailing << h 
                    - if h.day2 != 0 
                      - detailing_monthurs<<h
                    - elsif h.is_friday == true 
                      - detailing_friday<<h 

        %br
        .showform
          %table#subtable

            - j = detailing[0]
            - @column_count_friday=j.weeklytimetable.timetable_friday.timetable_periods.count
            - @column_count_monthur=j.weeklytimetable.timetable_monthurs.timetable_periods.count
            - break_format1 = j.weeklytimetable.timetable_monthurs.timetable_periods.order(seq: :asc).pluck(:is_break)
            - @break_format2 = j.weeklytimetable.timetable_friday.timetable_periods.order(seq: :asc).pluck(:is_break)
            /- @column_count=j.weeklytimetable.timetable_monthurs.timetable_periods.count	
            - daycount=4
            - weekdays_end = j.weeklytimetable.startdate.to_date+4.days

            /Header(row) : sequence & time period (Sunday - Wednesday)
            - detailing.each_with_index do |j,index|
              - if index==0
                - j.weeklytimetable.timetable_monthurs.timetable_periods.order(seq: :asc).in_groups_of(@column_count_monthur, false) do |row_things|
                  %tr
                    %th{:align => "center", :style=>"width:200px; border:1px solid black; text-align:center; padding:4px; vertical-align:middle;background-color:#FEE;font-size:12px;"} 
                      &nbsp;
                    - for periods in row_things
                      - if periods.day_name == 1
                        %th{:align => "center", :style=>"width:200px; border:1px solid black; text-align:center; padding:4px;background-color:#FEE;font-size:12px;"} 
                          =periods.seq
                          %BR= j.weeklytimetable.college.code=='amsas' ? periods.timing_24hrs : periods.timing

            /Content - (Sunday - Wednesday)
            - 1.upto(daycount) do |row|
              %tr
                - detailing.each_with_index do |j,index|
                  - if index==0
                    %td{:align =>"center", :style=> "border:1px solid black;text-align:center; padding:4px; vertical-align:middle;font-size:12px;"} 
                      /=(j.weeklytimetable.startdate+(row-1)).try(:strftime, "%A")
                      /this format refers to translation file -- t(:'date.day_names')[0]
                      =t(:'date.day_names')[(j.weeklytimetable.startdate+(row-1)).wday]
                      %br=(j.weeklytimetable.startdate+(row-1)).try(:strftime, "%d/%m/%Y")
                  /span BREAK fields & display CLASSES fields accordingly-(start)
                - 1.upto(@column_count_monthur) do |col|
                  - if break_format1[col-1]==true && row==1
                    /- if (count3==2 && count2==1) || (count3==5 && count2==1)
                    %td{:align =>"center", :rowspan=>"#{daycount}", :style=>"border:1px solid black; text-align:center; padding:4px;vertical-align:middle;font-size:12px;" } 
                      /=t 'training.weeklytimetable.break'
                      //1)Amsas - to display non_class items accordingly
                      - if j.weeklytimetable.timetable_monthurs.timetable_periods.where('non_class is not null').count > 0
                        - non_class_value=j.weeklytimetable.timetable_monthurs.timetable_periods.where(seq: col).first.non_class
                        =TimetablePeriod::NON_CLASS.find_all{|disp, value|value==non_class_value}.map{|disp, value|disp}[0]
                      - else
                        = t 'training.weeklytimetable.break'
                  - elsif break_format1[col-1]==true && row!=1
                    /- elsif count3==5&&count2!=1
                    /do-not-remove should not have any field or value
                  - elsif break_format1[col-1]==false
                    /- elsif count3!=2
                    %td{:align=>"center", :style=>"border:1px solid black; text-align:center; padding:4px;font-size:12px;"}	
                      - nos=0
                      /26Jul2013-toavoid multiple display:5 times of the same value in 1 field
                      - detailing_monthurs.each do |j|
                        - if j.day2 == row  && j.time_slot2 == col 
                          /&& j.weeklytimetable.hod_approved == true
                          - if nos==0
                            - nos+=1
                            /26Jul2013-toavoid multiple display:5times of the same value in 1 field
                            - if j.weeklytimetable.hod_approved == true 
                              %font{color: "#000000"}
                                %b= render 'p_class_details', {:j=>j}
                            - else 
                              %font{color: "grey"}
                                %b= render 'p_class_details', {:j=>j}
                          
            //Header(time slot) for Friday - hide from display if same Mon-Thurs & Friday format in use////////////////////////////////////////////////// - start - 11 Oct 2016
      
            ////2)Amsas - to sync/combine columns when same format in use for Mon-Thurs Vs Friday
            - if j.weeklytimetable.format1==j.weeklytimetable.format2
              //Display CONTENT(inc day/date column) of Friday ONLY when same format in use - without headers - start
              - 1.upto(1) do |row2|
                %tr
                  %td{:align =>"center", :style=> "border:1px solid black;text-align:center; padding:4px; vertical-align:middle;font-size:12px;"} 
                    - weekend_dayname=(weekdays_end).try(:strftime, "%A")
                    /this format refers to translation file -- t(:'date.day_names')[0]
                    =t(:'date.day_names')[(weekdays_end).wday]
                    %br=(weekdays_end).try(:strftime, "%d/%m/%Y")

                  /Content - (ADDITIONAL - Weekends classes)
                  /span BREAK fields & display CLASSES fields accordingly - col (column) starts after day/date column
                  - 1.upto(@column_count_monthur) do |col2|
                    - if break_format1[col2-1]==true && row2==1
                      %td{:align =>"center", :style=>"border:1px solid black; text-align:center; padding:4px;vertical-align:middle;font-size:12px;" } 
                        /=t 'training.weeklytimetable.break'
                        //3)Amsas - to display non_class items accordingly
                        - if j.weeklytimetable.timetable_monthurs.timetable_periods.where('non_class is not null').count > 0
                          - non_class_value=j.weeklytimetable.timetable_monthurs.timetable_periods.where(seq: col2).first.non_class
                          =TimetablePeriod::NON_CLASS.find_all{|disp, value|value==non_class_value}.map{|disp, value|disp}[0]
                        - else
                          = t 'training.weeklytimetable.break'
                    - elsif break_format1[col2-1]==true && row2!=1
                      /do-not-remove : should not have any field or value
                    - elsif break_format1[col2-1]==false
                      %td{:align=>"center", :style=>"border:1px solid black; text-align:center; padding:4px;font-size:12px;"}
                        /1-DECLARE BREAK for 4th slot for Weekend class (Friday only) for Week starting on Sunday
                        - if weekend_dayname=="Friday" && col2==4
                          = (t 'training.timetable_period.is_break').upcase
                        - else
                          /1-display Sat slot accordingly for Week starting on Sunday 
                          /2-OR display Weekends slot (Sat & Sun) for week starting on Monday
                          - nos=0
                          /- j.weeklytimetable.weeklytimetable_details.each do |j2|
                          - detailing_friday.each do |j2|
                            /- if j2.day2 == row2+daycount+1 && j2.time_slot2 == col2 
                            - if j2.is_friday == true && j2.time_slot == col2 
                              /&& j.weeklytimetable.hod_approved == true
                              - if nos==0
                                - nos+=1
                                - if j.weeklytimetable.hod_approved == true 
                                  %font{color: "#000000"}
                                    %b= render 'p_class_details', {:j=>j}
                                - else
                                  %font{color: "grey"}
                                    %b= render 'p_class_details', {:j=>j2}   		
              //Display CONTENT(inc day/date column) of Friday ONLY when same format in use - without headers - end 
               
            - else
           
              /Header for Thursday-(start)
              /- break_tospan=4
              /- classes_tospan=[5,7]
              /refer to screen capture -- PDF limitation-schedule.png - temp solution- as below:
              /- if @count1==9 && @count2==7 #excluding 1st column 
              /  - classes_tospan=[5]
              /- else
              /  - classes_tospan=[5,7]
              ///
              /Lunch break for Thursday is similar to Sun-Wed, except : working hours is less than Sun-Wed 
              - if weekdays_end.strftime('%A')=="Friday"
                /- classes_tospan=[5,7]
                - break_tospan=4
                - if @count1==9 && @count2==7 #excluding 1st column 
                  - classes_tospan=[5]
                - else
                  - classes_tospan=[5,7]
              - else
                /Thursday or any other day
                - break_tospan=0
                - classes_tospan=[]
              /lunch break on Thursday vs Friday
              - span_count="2"
              - detailing.each_with_index do |j,index|
                - if index==0
                  - j.weeklytimetable.timetable_friday.timetable_periods.order(seq: :asc).in_groups_of(@column_count_friday, false) do |row_things|
                    %tr
                      %th{:align => "center", :style=>"border:1px solid black; text-align:center; padding:4px; vertical-align:middle;background-color:#FEE;font-size:12px;"} 
                        &nbsp;

                      - colfriday=1
                      - for periods in row_things
                        - if periods.day_name == 2
                          /- if colfriday == 4 || colfriday == 5 || classes_tospan.include?(colfriday)
                          - if colfriday == break_tospan || classes_tospan.include?(colfriday)==true
                            %th{:align => "center", :colspan=>"2", :style=>"border:1px solid black; text-align:center; padding:4px;background-color:#FEE;font-size:12px;"} 
                              =periods.seq
                              %BR= j.weeklytimetable.college.code=='amsas' ? periods.timing_24hrs : periods.timing
                          - else
                            %th{:align => "center", :style=>"border:1px solid black; text-align:center; padding:4px;background-color:#FEE;font-size:12px;"} 
                              =periods.seq
                              %BR= j.weeklytimetable.college.code=='amsas' ? periods.timing_24hrs : periods.timing
                          - colfriday+=1
 
              /Content for Thursday-(start)
              %tr
                - detailing.each_with_index do |j,index|
                  - if index==0
                    %td{:align=>"center", :style=>"border:1px solid black;text-align:center; padding:4px; vertical-align:middle;font-size:12px;"}
                      /=weekdays_end.try(:strftime, "%A")
                      /this format refers to translation file -- t(:'date.day_names')[0]
                      =t(:'date.day_names')[weekdays_end.wday]
                      %br=weekdays_end.try(:strftime, "%d/%m/%Y")


                - 1.upto(@column_count_friday) do |col2|
                  - if @break_format2[col2-1]==true
                    /BREAK COLUMNS
                    - if col2 == break_tospan
                      /- if count4 == 4
                      %td{:colspan=>span_count, :align=>"center", :style=>"border:1px solid black;text-align:center; padding:4px; vertical-align:middle;font-size:12px;"}
                        =t 'training.weeklytimetable.break'
                    - else
                      /- elsif count4 == 2
                      %td{:align=>"center", :style=>"border:1px solid black;text-align:center; padding:4px; vertical-align:middle;font-size:12px;"}
                        =t 'training.weeklytimetable.break'
                  - elsif @break_format2[col2-1]==false 
                    /NON BREAK COLUMNS
                    - if classes_tospan.include?(col2)
                      /- elsif count4 == 5 
                      %td{:colspan=>span_count, :align=>"center", :style=>"border:1px solid black;text-align:center; padding:4px; vertical-align:middle;font-size:12px;"}
                        - nos=0
                        - detailing_friday.each do |j|
                          - if j.is_friday == true && j.time_slot == col2 
                            /&& j.weeklytimetable.hod_approved == true
                            - if nos==0
                              - nos+=1
                              - if j.weeklytimetable.hod_approved == true 
                                %font{color: "#000000"}
                                  %b= render 'p_class_details', {:j=>j}
                              - else
                                %font{color: "grey"}
                                  %b= render 'p_class_details', {:j=>j}

                    - else
                      %td{:align=>"center", :style=>"border:1px solid black;text-align:center; padding:4px; vertical-align:middle;font-size:12px;"}
                        - nos=0
                        - detailing_friday.each do |j|
                          - if j.is_friday == true  && j.time_slot == col2 
                            /&& j.weeklytimetable.hod_approved == true
                            - if nos==0
                              - nos+=1
                              - if j.weeklytimetable.hod_approved == true 
                                %font{color: "#000000"}
                                  %b= render 'p_class_details', {:j=>j}
                              - else
                                %font{color: "grey"}
                                  %b= render 'p_class_details', {:j=>j}
                              
            //Header(time slot) for Friday - hide from display if same Mon-Thurs & Friday format in use////////////////////////////////////////////////// - end - 11 Oct 2016                 
                              
            /Header(row) : sequence & time period (ADDITIONAL - Weekends classes)
            - weekdays_end = j.weeklytimetable.startdate.to_date+4.days
            - daycount2 = (j.weeklytimetable.enddate.to_date - weekdays_end).to_i 
            - if daycount2 > 0

              - detailing.each_with_index do |j,index|
                - if index==0
                
                  ////Amsas - hide weekends header when same timetable format in use for Mon-Thurs & Friday, as weekends must follow Mon-Thurs format
                  - if j.weeklytimetable.format1==j.weeklytimetable.format2
                  - else
                    //otherwise display weekends header as usual
                    - j.weeklytimetable.timetable_monthurs.timetable_periods.order(seq: :asc).in_groups_of(@column_count_monthur, false) do |row_things|
                      %tr
                        %th{:align => "center", :style=>"border:1px solid black; text-align:center; padding:4px; vertical-align:middle;background-color:#FEE;font-size:12px;"} 
                          &nbsp;
                        - for periods in row_things
                          - if periods.day_name == 1
                            %th{:align => "center", :style=>"border:1px solid black; text-align:center; padding:4px;background-color:#FEE;font-size:12px;"} 
                              =periods.seq
                              %BR= j.weeklytimetable.college.code=='amsas' ? periods.timing_24hrs : periods.timing


              /Day & date(column) : (ADDITIONAL - Weekends classes) - row starts after timeslot header
              - 1.upto(daycount2) do |row2|
                %tr
                  %td{:align =>"center", :style=> "border:1px solid black;text-align:center; padding:4px; vertical-align:middle;font-size:12px;"} 
                    - weekend_dayname=(weekdays_end+row2).try(:strftime, "%A")
                    /this format refers to translation file -- t(:'date.day_names')[0]
                    =t(:'date.day_names')[(weekdays_end+row2).wday]
                    %br=(weekdays_end+row2).try(:strftime, "%d/%m/%Y")

                  /Content - (ADDITIONAL - Weekends classes)
                  /span BREAK fields & display CLASSES fields accordingly - col (column) starts after day/date column
                  - 1.upto(@column_count_monthur) do |col2|
                    - if break_format1[col2-1]==true && row2==1
                      %td{:align =>"center", :rowspan=>"#{daycount2}", :style=>"border:1px solid black; text-align:center; padding:4px;vertical-align:middle;font-size:12px;" } 
                        /=t 'training.weeklytimetable.break'
                        //4)Amsas - to display non_class items accordingly
                        - if j.weeklytimetable.timetable_monthurs.timetable_periods.where('non_class is not null').count > 0
                          - non_class_value=j.weeklytimetable.timetable_monthurs.timetable_periods.where(seq: col2).first.non_class
                          =TimetablePeriod::NON_CLASS.find_all{|disp, value|value==non_class_value}.map{|disp, value|disp}[0]
                        - else
                          = t 'training.weeklytimetable.break'
                    - elsif break_format1[col2-1]==true && row2!=1
                      /do-not-remove : should not have any field or value
                    - elsif break_format1[col2-1]==false
                      %td{:align=>"center", :style=>"border:1px solid black; text-align:center; padding:4px;font-size:12px;"}
                        /1-DECLARE BREAK for 4th slot for Weekend class (Friday only) for Week starting on Sunday
                        - if weekend_dayname=="Friday" && col2==4
                          = (t 'training.timetable_period.is_break').upcase
                        - else
                          /1-display Sat slot accordingly for Week starting on Sunday 
                          /2-OR display Weekends slot (Sat & Sun) for week starting on Monday
                          - nos=0
                          /- j.weeklytimetable.weeklytimetable_details.each do |j2|
                          - detailing_monthurs.each do |j2|
                            - if j2.day2 == row2+daycount+1 && j2.time_slot2 == col2 
                              /&& j.weeklytimetable.hod_approved == true					  
                              - if nos==0
                                - nos+=1
                                - if j.weeklytimetable.hod_approved == true 
                                  %font{color: "#000000"}
                                    %b= render 'p_class_details', {:j=>j}
                                - else
                                  %font{color: "grey"}
                                    %b= render 'p_class_details', {:j=>j2}   		
                              
.row
  .col-md-4.col-md-offset-3
    %hr
    .form-actions
      = link_to content_tag(:i, "", :class => "fa fa-arrow-left ") + " " + t('.back', :default => t("helpers.links.back")), personalize_index_training_weeklytimetables_path, :class => 'btn btn-default'
      = link_to content_tag(:i, "", class: "fa fa-file-pdf-o"), personalizetimetable_training_weeklytimetable_path(@selected_date, format: "pdf"), class: "btn btn-default", "data-toggle" => "tooltip", title: "Personalize Timetable"
