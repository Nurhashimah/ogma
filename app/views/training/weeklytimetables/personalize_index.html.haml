- model_class = Weeklytimetable
.page-header
  %h1= t('training.weeklytimetable.personalize_timetable')
  
.navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
  %ul.nav.navbar-nav
  %ul.nav.navbar-nav.navbar-right
    %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar2"
    %li= link_to  (fa_icon "file-pdf-o", text: (t 'print')),  personalize_report_training_weeklytimetables_path(params.merge(format: 'pdf' ))

.row.filter{style: "display:none;"}
  .col-md-2
   
.row
  %table.table-striped.table-hover.ogma
    %thead
      %tr
        /%th= sort_link(@search, :programme_id, (t 'training.weeklytimetable.programme_id'))
        /%th= sort_link(@search, :intake_id, (t 'training.weeklytimetable.intake_id'))
        /%th= sort_link(@search, :startdate, (t 'training.weeklytimetable.startdate'))
        /%th= sort_link(@search, :end_date, (t 'training.weeklytimetable.enddate'))
        /%th= sort_link(@search, :semester, (t 'training.weeklytimetable.semester'))
        %th{width: '30%'}= (t 'training.weeklytimetable.programme_id')
        /%th= (t 'training.weeklytimetable.intake_id') - may have multiple groups (intakes) in 1 week
        %th{width: '15%'}= (t 'training.weeklytimetable.startdate')
        %th{width: '15%'}= (t 'training.weeklytimetable.enddate')
        %th{width: '20%'} Status
        %th{width: '20%'}= (t 'training.weeklytimetable.slot_count')
        /%th= (t 'training.weeklytimetable.semester')

    - all_combine = []
    - @weeklytimetables_details.each do |x|
      - all_combine << Weeklytimetable.find(x.weeklytimetable.id)
    - @personalize = all_combine.group_by{|t|t.startdate}

    %tbody
    = render "personalize_index_search"

    - @personalize.each do |sdate, items2|
      - combined_wt=""
      - combined_slot_count=""
      - combined_status=""
      /- items2.map(&:id).uniq.each{|x| combined_wt+=(Weeklytimetable.find(x).schedule_programme.programme_list+"<br>")}
      /- items2.map(&:id).uniq.each{|x| combined_slot_count+=(Weeklytimetable.find(x).weeklytimetable_details.where(lecturer_id: current_user.userable_id).count.to_s+"<br>")}
      /- items2.map(&:id).uniq.each{|x| combined_status+=(Weeklytimetable.find(x).hod_approved? ? (t 'approved')+"<br>" : "<span style='color: red;'>"+(t 'not_approved')+"</span><br>")}

      - items2.map(&:id).uniq.each do |x|
        - combined_wt+=(Weeklytimetable.find(x).schedule_programme.programme_list+"<br>")
        - combined_slot_count+=(Weeklytimetable.find(x).weeklytimetable_details.where(lecturer_id: current_user.userable_id).count.to_s+"<br>")
        - combined_status+=(Weeklytimetable.find(x).hod_approved? ? (t 'approved')+"<br>" : "<span style='color: red;'>"+(t 'not_approved')+"</span><br>")

      - items2.each_with_index do |item, index|
        - if index==items2.count-1
          %tr
            /%td=h link_to weeklytimetable.schedule_programme.programme_list, training_weeklytimetable_path(weeklytimetable)     
            %td=h link_to (combined_wt).html_safe, personalize_show_training_weeklytimetable_path(sdate)
            /%td=h item.schedule_intake.group_with_intake_name
            %td=h sdate.try(:strftime, "%d %b %Y")
            %td=h item.try(:enddate).try(:strftime, "%d %b %Y")
            %td=combined_status.html_safe
            %td=combined_slot_count.html_safe
            
            /%td=h item.academic_semester.semester

  /.right{style:"padding:0 30px; margin:0;"}= paginate @weeklytimetables, :theme => 'twitter-bootstrap-3'

:javascript

  $(document).ready(function(e) {
    $('.index_search_bar2').click(function(){	   
      $('.search_row2').toggle(); 
    });
  });