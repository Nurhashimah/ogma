- model_class = Programme
.page-header
  %h1= t('training.programme.title')
  
.navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
  %ul.nav.navbar-nav
    %li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'training.programme.new_programme'))), new_training_programme_path
  %ul.nav.navbar-nav.navbar-right
    /%li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "toga"
    %li= link_to content_tag(:li, fa_icon("print", text: (t 'actions.print'))), "#", class: 'bogus'

.row.filter{style: "display:none;"}
  .col-md-2
   
= render 'shared/flashes'
/ = fa_icon("minus-square-o")
/ = fa_icon("minus-square")
/ = fa_icon("plus-square-o")
/ = fa_icon("plus-square")
/ %br
/ = fa_icon("minus-circle")
/ = fa_icon("minus")
/ = fa_icon("plus-circle")
/ = fa_icon("plus")
.row
  .col-md-12
    .alert.alert-warning
      %strong=t 'training.programme.remark_title'
      %ol
        %li 
          =t 'training.programme.remark_text1'
          &nbsp;
          = fa_icon("plus-square-o")
          \/
          = fa_icon("plus-square")
          &nbsp;
          =t 'training.programme.remark_text2'
          %u=t 'training.programme.remark_text3'
          \/ 
          %u=t 'training.programme.remark_text4'
          =t 'training.programme.remark_text5'
        %li=t 'training.programme.remark_text9'
        %li 
          =t 'training.programme.remark_text6'
          %i=t 'training.programme.remark_text7'
          =t 'training.programme.remark_text8'
      /=t 'training.programme.remarks'
      
  %table.table-striped.table-hover.ogma
    %thead
    /%tr
    /%th= sort_link(@search, :code, (t 'training.programme.combo_code'))
    /%th= sort_link(@search, :name, (t 'training.programme.duration'))
    /%th= sort_link(@search, :description, (t 'training.programme.credits'))
    /%th= sort_link(@search, :created_by, (t 'training.programme.status'))
    %tbody
      /= render "index_search"
      /- @programmes.each do |timetable| 
      /%tr
      /%td=h link_to timetable.combo_code, training_timetable_path(timetable)     
      /%td=h timetable.duration
      /%td=h timetable.credits
      /%td=h timetable.status

%ul#header_tree
  %li
    %span.combo_code= (t 'training.programme.combo_code')
    %span.credits= (t 'training.programme.credits')
    %span.status=  (t 'training.programme.status')
    %span.duration= (t 'training.programme.duration')
    %span.lecture= (t 'training.programme.lecture')
    %span.tutorial= (t 'training.programme.tutorial')
    %span.practical= (t 'training.programme.practical')
    /%span.combo_code= sort_link(@search, :code, (t 'training.programme.combo_code'))
    /%span.credits= sort_link(@search, :credits, (t 'training.programme.credits'))
    /%span.status= sort_link(@search, :status, (t 'training.programme.status'))
    /%span.duration= sort_link(@search, :duration, (t 'training.programme.duration'))

/Programme @ 1st level
%ul#programme_tree
  = hidden_field_tag(:course_count, @programmes.group_by(&:root_id).count)
  - count=-1
  - @programmes.group_by(&:root_id).sort.each do |course,programmes| 
    - count+=1
    /= hidden_field_tag("semester_count_#{count}", programmes.first.descendants.at_depth(1).count)
    %li
      - course_rec = Programme.where(id:course)[0]
      %span.Collapsable
        - if course_rec.descendants.count > 0
          %span{id: "anchor_#{count}", class: "ancmain"}= link_to fa_icon("plus-square-o"), "#"
        - else
          = fa_icon("minus-square-o")
        %span.programme_list
          &nbsp;&nbsp;
          %strong=course_rec.code
          = link_to course_rec.programme_list, training_programme_path(course_rec)
        %span.credits=h course_rec.credits if course_rec.credits != 0
        %span.status=h check_kin_blank {(DropDown::COURSE_STATUS.find_all{|disp, value| value == course_rec.status}).map {|disp, value| disp} }[0]
        %span.duration
          =h course_rec.duration
          =h check_kin_blank {(DropDown::DURATION_TYPES.find_all{|disp, value| value == course_rec.duration_type}).map {|disp, value| disp} }[0]
      
      /Semester @ 2nd level
      %ul{id: "tree_#{count}", class: 'non_bulleted'}
        - programmes.each do |programme|
          - sem_count=-1
          - programme.descendants.at_depth(1).sort_by(&:code).each do |semester|
            - sem_count+=1
            %li
              %span.Collapsable
                - if semester.descendants.count > 0
                  %span{id: "anchor_#{count}_#{sem_count}", class: "ancmain"}= link_to fa_icon("plus-square-o"), "#"
                - else
                  = fa_icon("minus-square-o")
                %span.programme_list
                  &nbsp;&nbsp;
                  - if semester.course_type=='Semester'
                    ="Semester "+semester.name
                  - else
                    %strong=semester.code
                    \-
                    = link_to semester.name, training_programme_path(semester)
                %span.credits=h semester.credits if semester.credits != 0 
                %span.status=h check_kin_blank {(DropDown::COURSE_STATUS.find_all{|disp, value| value == semester.status}).map {|disp, value| disp} }[0]
                %span.duration
                  =h semester.duration
                  =h check_kin_blank {(DropDown::DURATION_TYPES.find_all{|disp, value| value == semester.duration_type}).map {|disp, value| disp} }[0]  
              
              /Subject @ 3rd level
              %ul{id: "tree_#{count}_#{sem_count}", class: 'non_bulleted'}
                - subject_count=-1
                - semester.descendants.at_depth(2).sort_by(&:code).each do |subject|
                  - subject_count+=1
                  %li 
                    %span.Collapsable
                      - if subject.descendants.count > 0
                        %span{id: "anchor_#{count}_#{sem_count}_#{subject_count}", class: "ancmain"}= link_to fa_icon("plus-square-o"), "#"
                      - else
                        = fa_icon("minus-square-o")
                      %span.programme_list
                        &nbsp;&nbsp;
                        %strong=subject.code
                        \-
                        = link_to subject.name, training_programme_path(subject)
                      %span.credits=h subject.credits if subject.credits != 0
                      %span.status=h check_kin_blank {(DropDown::COURSE_STATUS.find_all{|disp, value| value == subject.status}).map {|disp, value| disp} }[0]
                      %span.duration
                        =h subject.duration
                        =h check_kin_blank {(DropDown::DURATION_TYPES.find_all{|disp, value| value == subject.duration_type}).map {|disp, value| disp} }[0]
                   
                    /Topic @ 4th level
                    %ul{id: "tree_#{count}_#{sem_count}_#{subject_count}", class: 'non_bulleted'}
                      - topic_count=-1
                      - subject.descendants.at_depth(3).sort_by(&:code2).each do |topic|
                        - topic_count+=1
                        %li
                          %span.Collapsable
                            - if topic.descendants.count > 0
                              %span{id: "anchor_#{count}_#{sem_count}_#{subject_count}_#{topic_count}", class: "ancmain"}= link_to fa_icon("plus-square-o"), "#"
                            - else
                              = fa_icon("minus-square-o")
                            %span.programme_list
                              &nbsp;&nbsp;
                              %strong=topic.code
                              \-
                              = link_to topic.name, training_programme_path(topic)
                            %span.credits=h topic.credits if topic.credits != 0
                            %span.status=h check_kin_blank {(DropDown::COURSE_STATUS.find_all{|disp, value| value == topic.status}).map {|disp, value| disp} }[0]
                            %span.duration
                              =h topic.duration
                              =h check_kin_blank {(DropDown::DURATION_TYPES.find_all{|disp, value| value == topic.duration_type}).map {|disp, value| disp} }[0]
                            %span.lecture
                              =h topic.lecture
                              =(DropDown::LECTURE_TIME.find_all{|disp, value| value == topic.lecture_time}).map {|disp, value| disp}[0] if topic.lecture
                            %span.tutorial
                              =h topic.tutorial
                              =(DropDown::LECTURE_TIME.find_all{|disp, value| value == topic.tutorial_time}).map {|disp, value| disp}[0] if topic.tutorial
                            %span.practical
                              =h topic.practical.to_s
                              =(DropDown::LECTURE_TIME.find_all{|disp, value| value == topic.practical_time}).map {|disp, value| disp}[0] if topic.practical
                          
                          /Subtopic @ 5th level
                          %ul{id: "tree_#{count}_#{sem_count}_#{subject_count}_#{topic_count}", class: 'non_bulleted'}
                            - subtopic_count=-1
                            - topic.descendants.at_depth(4).sort_by(&:code2).each do |subtopic|
                              - subtopic_count+=1
                              %li
                                %span.Collapsable
                                  - if subtopic.descendants.count > 0
                                    %span{id: "anchor_#{count}_#{sem_count}_#{subject_count}_#{topic_count}_#{subtopic_count}", class: "ancmain"}
                                      = link_to fa_icon("plus-square-o"), "#"
                                  - else
                                    = fa_icon("minus-square-o")
                                  %span.programme_list
                                    &nbsp;&nbsp;
                                    %strong=subtopic.code
                                    \-
                                    = link_to subtopic.name, training_programme_path(subtopic)
                                  %span.credits=h subtopic.credits if subtopic.credits != 0
                                  %span.status=h check_kin_blank {(DropDown::COURSE_STATUS.find_all{|disp, value| value == subtopic.status}).map {|disp, value| disp} }[0]
                                  %span.duration
                                    =h subtopic.duration
                                    =h check_kin_blank {(DropDown::DURATION_TYPES.find_all{|disp, value| value == subtopic.duration_type}).map {|disp, value| disp} }[0]
                                  %span.lecture
                                    =h subtopic.lecture
                                    =(DropDown::LECTURE_TIME.find_all{|disp, value| value == subtopic.lecture_time}).map {|disp, value| disp}[0] if subtopic.lecture
                                  %span.tutorial
                                    =h subtopic.tutorial
                                    =(DropDown::LECTURE_TIME.find_all{|disp, value| value == subtopic.tutorial_time}).map {|disp, value| disp}[0] if subtopic.tutorial
                                  %span.practical
                                    =h subtopic.practical.to_s
                                    =(DropDown::LECTURE_TIME.find_all{|disp, value| value == subtopic.practical_time}).map {|disp, value| disp}[0] if subtopic.practical
                                
                                /SubSubTopic @6th level
                                %ul{id: "tree_#{count}_#{sem_count}_#{subject_count}_#{topic_count}_#{subtopic_count}", class: 'non_bulleted'}
                                  - subsubtopic_count=-1
                                  - subtopic.descendants.at_depth(5).sort_by(&:code).each do |subsubtopic|
                                    - subsubtopic_count+=1
                                    %li
                                      %span.Collapsable
                                        - if subsubtopic.descendants.count > 0
                                          %span{id: "anchor_#{count}_#{sem_count}_#{subject_count}_#{topic_count}_#{subtopic_count}_#{subsubtopic_count}", class: "ancmain"}
                                            = link_to fa_icon("plus-square-o"), "#"
                                        - else
                                          = fa_icon("minus-square-o")
                                        %span.programme_list
                                          &nbsp;&nbsp;
                                          %strong=subtopic.code
                                          \-
                                          = link_to subsubtopic.name, training_programme_path(subsubtopic)
                                        %span.credits=h subsubtopic.credits if subsubtopic.credits !=0
                                        %span.status=h check_kin_blank {(DropDown::COURSE_STATUS.find_all{|disp, value| value == subsubtopic.status}).map {|disp, value| disp} }[0]
                                        %span.duration
                                          =h subsubtopic.duration
                                          =h check_kin_blank {(DropDown::DURATION_TYPES.find_all{|disp, value| value == subsubtopic.duration_type}).map {|disp, value| disp} }[0]
                                        %span.lecture
                                          =h subsubtopic.lecture
                                          =(DropDown::LECTURE_TIME.find_all{|disp, value| value == subsubtopic.lecture_time}).map {|disp, value| disp}[0] if subsubtopic.lecture
                                        %span.tutorial
                                          =h subsubtopic.tutorial
                                          =(DropDown::LECTURE_TIME.find_all{|disp, value| value == subsubtopic.tutorial_time}).map {|disp, value| disp}[0] if subsubtopic.tutorial
                                        %span.practical
                                          =h subsubtopic.practical.to_s
                                          =(DropDown::LECTURE_TIME.find_all{|disp, value| value == subsubtopic.practical_time}).map {|disp, value| disp}[0] if subsubtopic.practical
                                          \- up to this level
                                  %span.divider2
                            %span.divider2
                    %span.divider2
              %span.divider2
      %span.divider
%BR


:javascript
  var toggle = function () {
    $(this).parent().children().toggle();
    $(this).toggle();
  };
  $(".Collapsable").click(toggle);
  $(".Collapsable").each(toggle);

  var coursecount=document.getElementById("course_count").value;
  /*alert(coursecount);*/
 
  $('.ancmain').click(function(){
    /*alert($(this).attr('id'));*/
    var thisid=$(this).attr('id');
    var aaa=thisid.substring(7, thisid.length)
    var anc=document.getElementById("anchor_"+aaa);
    /*alert(anc.innerHTML);*/
    /*alert(aaa);*/
    if($('#tree_'+aaa).css('display')=='none')
    {
      anc.innerHTML='<a href="#"><i class="fa fa-plus-square"></i></a>';
    }
    else if($('#tree_'+aaa).css('display')=='block')
    {
      anc.innerHTML='<a href="#"><i class="fa fa-plus-square-o"></i></a>';
    }
  });
 
  
  
:javascript
$(document).ready(function(){
  $('.toga').click(function() {
    $('.search_row').toggle(); 
  });
})


/BELOW-For checking
/ for(i=0; i<coursecount; i++)
/   {
/     /*alert("i="+i);*/
/     var semestercount=document.getElementById("semester_count_"+i).value;
/     alert("nilai "+i+"="+semestercount);
/     
/     if($('#semester_tree_'+i).css('display')=='none')
/     { alert("nilai i dlm semester_tree="+i); }
/     
/     var anc=$('#anchor_programme_'+i);
/     window["anc"+i]=$('#anchor_programme_'+i);
/     
/     alert(anc);
/     anc.innerHTML=i;
/   
/     alert(anc.innerHTML);
/     
/     
/   }


/DRY-5Aug2016
 
/   $('.anc2').click(function(){
/     /*alert($(this).attr('id'));*/
/     var thisid=$(this).attr('id');
/     var aaa=thisid.substring(thisid.lastIndexOf("_")+1, thisid.length)
/     var anc=document.getElementById("anchor_programme_"+aaa);
/     /*alert(anc.innerHTML);*/
/     if($('#semester_tree_'+aaa).css('display')=='none')
/     {
/       anc.innerHTML='<a href="#"><i class="fa fa-plus-square"></i></a>';
/     }
/     else if($('#semester_tree_'+aaa).css('display')=='block')
/     {
/       anc.innerHTML='<a href="#"><i class="fa fa-plus-square-o"></i></a>';
/     }
/   });
/   
/   $('.anc3').click(function(){
/     var thisid=$(this).attr('id');
/     /*alert(thisid);*/
/     var aaa=thisid.substring(16, thisid.length)
/     var anc=document.getElementById("anchor_semester_"+aaa);
/     /*alert(aaa);*/
/     if($('#subject_tree_'+aaa).css('display')=='none')
/     {  anc.innerHTML='<a href="#"><i class="fa fa-plus-square"></i></a>';}
/     else
/     {  anc.innerHTML='<a href="#"><i class="fa fa-plus-square-o"></i></a>';}
/   });
/   
/   $('.anc4').click(function(){
/     var thisid=$(this).attr('id');
/     var aaa=thisid.substring(15, thisid.length)
/     var anc=document.getElementById("anchor_subject_"+aaa);
/     if($('#topic_tree_'+aaa).css('display')=='none')
/     {  anc.innerHTML='<a href="#"><i class="fa fa-plus-square"></i></a>';}
/     else
/     {  anc.innerHTML='<a href="#"><i class="fa fa-plus-square-o"></i></a>';}
/   });
/  
/   $('.anc5').click(function(){
/     var thisid=$(this).attr('id');
/     var aaa=thisid.substring(13, thisid.length)
/     var anc=document.getElementById("anchor_topic_"+aaa);
/     if($('#subtopic_tree_'+aaa).css('display')=='none')
/     {  anc.innerHTML='<a href="#"><i class="fa fa-plus-square"></i></a>';}
/     else
/     {  anc.innerHTML='<a href="#"><i class="fa fa-plus-square-o"></i></a>';}
/   });
/   
/   $('.anc6').click(function(){
/     var thisid=$(this).attr('id');
/     var aaa=thisid.substring(16, thisid.length)
/     var anc=document.getElementById("anchor_subtopic_"+aaa);
/     if($('#subsubtopic_tree_'+aaa).css('display')=='none')
/     {  anc.innerHTML='<a href="#"><i class="fa fa-plus-square"></i></a>';}
/     else
/     {  anc.innerHTML='<a href="#"><i class="fa fa-plus-square-o"></i></a>';}
/   });