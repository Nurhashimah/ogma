- model_class = Tenant
.page-header
  %h1= t('student.tenant.list_full2')#, :default => model_class.model_name.human.pluralize

.row
  .navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
    %ul.nav.navbar-nav
      //%li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'new'))), new_student_tenant_path
    %ul.nav.navbar-nav.navbar-right
      %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar"
      %li.dropdown
        %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
          = fa_icon "print", text: (t 'actions.print')
          %b.caret
        %ul.dropdown-menu
          %li= link_to  (fa_icon "file-pdf-o", text: (t "student.tenant.list")), tenant_report_staff_student_tenants_path(params.merge(format: 'pdf' ))

.row
  .col-md-12
    .alert.alert-warning
      %strong=(t 'remark')+": "
      %span{style: 'color: red;'} *
      =t('location.administered')
.row
  %table.table-striped.table-hover.ogma
    %thead
      %tr
        %th{width: '10%'}= t 'location.code'
        %th{width: '10%'}= t 'staff.icno'
        %th{width: '20%'}= sort_link(@search, :staff_name,(t 'staff.name')) 
        %th{width: '10%'}= t 'student.tenant.key.provided'
        %th{width: '10%'}= t 'student.tenant.key.expected'
        %th{width: '10%'}= t 'student.tenant.key.returned'
        %th{width: '10%'}= t 'student.tenant.vacate'
        %th{width: '10%'}= t 'student.tenant.damage_status'
        %th{width: '10%'}= t 'student.tenant.damage_type'

    %tbody
    = render "index_search2"
    - @tenants.each do |tenant|
      - unless tenant.staff.nil?

        - if tenant.damages.count==0; damages_text = (fa_icon('times')); else damages_text = (fa_icon('check')); end
        - damage_description = []

        %tr
          %td
            = link_to tenant.location.try(:combo_code), campus_location_path(tenant.location)
            %span{style: 'color: red;'}="*" if [tenant.location.try(:staffadmin_id)].include?(current_user.userable_id)
          %td= link_to tenant.try(:staff).try(:icno), student_tenant_path(tenant)
          %td= link_to tenant.try(:staff).try(:staff_with_rank), staff_info_path(tenant.staff)
          %td= tenant.keyaccept.try(:strftime, '%d %b %Y')
          %td
            - if tenant.keyexpectedreturn < Date.today && tenant.keyreturned.blank?
              %span{style: 'color: red;'}=tenant.keyexpectedreturn.try(:strftime, '%d %b %Y')
            - else
              =tenant.keyexpectedreturn.try(:strftime, '%d %b %Y')
          %td= tenant.keyreturned.try(:strftime, '%d %b %Y')
          %td= tenant.force_vacate? ? (fa_icon('check')) : (fa_icon('times'))
          %td= damages_text
          %td
            - if tenant.damages.count>0
              - tenant.damages.each{|t|damage_description << t.damage_type}
              = damage_description.uniq.to_sentence

        //%td= link_to image_tag("printer.png", :border => 0, :title => 'Borang Asrama'), :action => 'borang_asrama', :id => tenant
  .right{style:"padding:0 30px; margin:0;"}= paginate @tenants, :theme => 'twitter-bootstrap-3'
