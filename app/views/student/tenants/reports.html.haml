- model_class = Tenant
.page-header
  %h1=t 'student.tenant.report'

.row
  .navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
    /%ul.nav.navbar-nav
    /  //%li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'new'))), new_student_tenant_path
    %ul.nav.navbar-nav.navbar-right
      /%li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "toga"
      %li.dropdown
        %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
          = fa_icon "print", text: (t 'actions.print')
          %b.caret
        %ul.dropdown-menu
          - @residentials.sort.each do |building|
            %li= link_to  (fa_icon "file-pdf-o", text: building.name), laporan_penginapan_student_tenants_path(buildingname: building.name, format: 'pdf')
      %li.dropdown
        %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
          = fa_icon "external-link", text: (t 'actions.export')
          %b.caret
        %ul.dropdown-menu
          - @residentials.sort.each do |building|
            /%li= link_to  (fa_icon "file-excel-o", text: building.name), reports_student_tenants_path(buildingname: building.name, format: 'xls')
            %li= link_to (fa_icon "file-excel-o", text: building.name), statistic_level_campus_locations_path(buildingname: building.name, format: 'xls')
.row
  /%H4=t 'student.tenant.report'
  %table.table-striped.table-hover.ogma
    - @residentials.sort.each do |building|
      %thead
        %tr
          %th= building.name
          %th= t 'student.tenant.occupied'
          %th= t 'student.tenant.empty'
          %th= t 'student.tenant.damaged'
          %th= t 'student.tenant.notes'
          %th= t 'student.tenant.census2'
      - building.children.sort.reverse.each do |floor|
      
        - @all = floor.descendants.where(typename: [2,8]).pluck(:combo_code).group_by{|x|x[0, x.size-2]} 
        - @occupied_beds = floor.descendants.where(typename: [2,8]).joins(:tenants).where("tenants.id" => @current_tenants)
        - @occupied = @occupied_beds.pluck(:combo_code).group_by{|x|x[0, x.size-2]} 
        /this may not precise coz 1 room have 2 beds, 1 bed occupied, room considered occupied, use all-occupied-damaged instead
        /- @empty =    floor.descendants.where(typename: [2,8]).where(occupied: [false, nil]).where('id NOT IN (?)', @occupied_locations)
        - @damaged = floor.descendants.where(occupied: true).where(typename: 6) #NOTE:is a room
        - @empty = @all.count-@occupied.count-@damaged.count

        %tr
          %td= floor.name
          %td= @occupied.count
          %td= @empty
          %td= @damaged.count
          %td &nbsp;
          %td= link_to ((t 'student.tenant.census2')+" ("+@occupied_beds.count.to_s+" "+(t 'student.tenant.person')+")"), census_level_student_tenant_path(floor.id)
