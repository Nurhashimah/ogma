- model_class = Tenant
.page-header
  %h1= t('student.tenant.report_census_title')#, :default => model_class.model_name.human.pluralize 

.row  
  .navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
    %ul.nav.navbar-nav
      //%li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'new'))), new_student_tenant_path
    %ul.nav.navbar-nav.navbar-right
      /%li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar"
      %li.dropdown
        %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
          = fa_icon "print", text: (t 'actions.print')
          %b.caret
        %ul.dropdown-menu
          %li= link_to (t "student.tenant.statistics"), statistics_student_tenants_path
          %li
            %a.bogus{:href => "#"} Laporan Penginapan
          %li= link_to (t "student.tenant.census"), census_student_tenants_path(:format => :pdf )

.row
  %H4=t 'student.tenant.report'
  %table.table-striped.table-hover.ogma
    - @residentials.sort.each do |building|
      %thead
        %tr
          %th= building.name
          %th= t 'student.tenant.occupied'
          %th= t 'student.tenant.empty'
          %th= t 'student.tenant.damaged'
          %th= t 'student.tenant.notes'
      - building.children.sort.reverse.each do |floor|
      
        - @all = floor.descendants.where(typename: [2,8]).pluck(:combo_code).group_by{|x|x[0, x.size-2]} 
        - @occupied = floor.descendants.where(typename: [2,8]).joins(:tenants).where("tenants.id" => @current_tenants).pluck(:combo_code).group_by{|x|x[0, x.size-2]} 
        /this may not precise coz 1 room have 2 beds, 1 bed occupied, room considered occupied, use all-occupied-damaged instead
        /- @empty =    floor.descendants.where(typename: [2,8]).where(occupied: [false, nil]).where('id NOT IN (?)', @occupied_locations)
        - @damaged = floor.descendants.where(occupied: true).where(typename: 6) #is a room
        - @empty = @all.count-@occupied.count-@damaged.count

        %tr
          %td= floor.name
          %td= @occupied.count
          %td= @empty
          %td= @damaged.count
          %td
          
.row
  %H4=t 'student.tenant.census'
  %table.table-striped.table-hover.ogma
    - @residentials.sort.each do |building|
      - building.children.sort.reverse.each do |floor|
      
        - @occupied = floor.descendants.where(typename: [2,8]).joins(:tenants).where("tenants.id" => @current_tenants)
        - @empty =    floor.descendants.where(typename: [2,8]).where(occupied: [false, nil]).where('id NOT IN (?)', @occupied_locations)
        - @damaged =         floor.descendants.where(occupied: true)
        
        - @rooms = floor.descendants.where(typename: [2,8])
        - @this_floor = @current_tenants.where(location_id: @rooms)
        
        - unless @this_floor.blank?
          %thead
            %tr
              %td{colspan:8}= floor.name
            %tr
              %td= t 'location.code'
              %td= t 'location.name'
              %td= t 'student.name'
              %td= t 'student.icno'
              %td= t 'student.matrixno'
              %td= t 'course.name'
              %td= t 'training.intake.description'
              %td= t 'student.tenant.notes'
        %tbody
          - @this_floor.each do |room|
            %tr
              %td= room.location.combo_code
              %td= room.location.name
              %td= room.try(:student).try(:name)
              %td= room.try(:student).try(:icno)
              %td= room.try(:student).try(:matrixno)
              %td= room.try(:student).try(:course).try(:name)
              %td= room.student.intake_num rescue ""
              %td

