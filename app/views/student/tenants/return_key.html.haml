- model_class = Tenant
.page-header
  %h1
    = t('student.tenant.return_key')


.row
  .col-md-6.col-md-offset-3.student_search
    = form_for :search, :html=>{:class => "form-horizontal", :role => "form", :style => 'padding: 0 30px 0 30px; margin-top: 0;' } do |f|
      .input-group
        = f.text_field :student_icno, data: {autocomplete_source: Tenant.joins(:student).map(&:student_icno)}, :autofocus => true, :required => true, :class => 'form-control search-field', :type => "input", placeholder: (@student_ic || "IC Starts with")#, value: (@params_student_ic = params[:search].try(:[], :student_icno))
        %span.input-group-btn
          = f.submit (t 'search'), :class => "btn btn-primary", style: "width:80px;"
      %span.help-block.small= (t 'student.search.ic_no')


- if @my_room
  .row
    .col-md-8.col-sm-offset-2
      .panel.panel-info
        .panel-heading
          = t( 'location.code')
          &nbsp; : &nbsp;
          = @my_room.location.combo_code
          &nbsp; : &nbsp;
          = @my_room.location.name
        .panel-body
          .row
            .col-md-10.col-md-offset-1
              %dl.dl-horizontal
                %dt= t 'student.name'
                %dd= link_to @my_room.student.name, student_path(@my_room.student_id)

                %dt= t 'student.matrixno'
                %dd= @my_room.student.try(:matrixno)
          
                %dt= t 'student.icno'
                %dd= @my_room.student.icno
            
                %dt= t 'programme.name', :default =>  model_class.human_attribute_name(:name) + ":"
                %dd= @my_room.student.try(:course).try(:name)#, programme_path(@tenant.student.course.id)
            
                %dt= t 'student.intake', :default =>  model_class.human_attribute_name(:intake) + ":"
                %dd= @my_room.student.try(:intake).try(:name)#, student_path(@tenant.student_id)
            
                %dt= t 'student.semester', :default =>  model_class.human_attribute_name(:semester) + ":"
                %dd= year_and_sem(@my_room.student) rescue ''
            
                %dt= t 'student.tenant.key.provided', :default =>  model_class.human_attribute_name(:keyaccept) + ":"
                %dd= @my_room.keyaccept.try(:strftime, "%d %b %Y")
            
                %dt= t 'student.tenant.key.expected', :default =>  model_class.human_attribute_name(:keyexpectedreturn) + ":"
                %dd= @my_room.keyexpectedreturn.try(:strftime, "%d %b %Y")
                
                .returned{style:"display:none;"}
                  %dt= t 'student.tenant.key.returned', :default =>  model_class.human_attribute_name(:keyexpectedreturn) + ":"
                  %dd= @my_room.keyreturned.try(:strftime, "%d %b %Y")
                
                %dt= t 'location.damage.title'
                %dd
                  - for damage in @my_room.location.damages.order(reported_on: :desc)
                    = damage.reported_on
                    &nbsp; : &nbsp;
                    = damage.description
                    %br

            .row
              .col-md-10.col-md-offset-1
                %hr
                = form_for [:student, @tenant], remote: true, :html => { :class => 'form-horizontal' } do |f|
                  %dt Return Key
                  = render 'shared/flashes'
                  =# f.hidden_field :student_id, value: ''
                  .form-group
                    %label.col-sm-3.control-label{:for => "keyreturned"}= t 'student.tenant.key.returned'
                    .col-md-4
                      = f.text_field :keyreturned, type: "text", :class => 'form-control date_picker_after'
							
                  .form-group.returned
                    %label.col-sm-3.control-label{:for => "force_vacate"}= t 'student.tenant.vacate'
                    .col-md-4
                      = f.check_box :force_vacate, :class => 'form-control'

                  .form-group
                    %label.col-sm-3.control-label{:for => "damage"}= t 'student.tenant.damage'
                    .col-md-6
                      = f.fields_for :damages do |builder|
                        - if (builder.object.id!=nil && builder.object.document_id==2) || builder.object.id==nil
                          = render 'damage_fields', f: builder
                      /= link_to_add_fields ("Add Details"), f, :damages
                      = link_to_add_fields t('Add Details'), f, :damages, "",  ""
                       
                  .form-group.returned
                    .col-sm-offset-3.col-sm-4
                      = f.submit t('student.tenant.return_key'), class: "btn btn-primary", id: "save"

:javascript
  $('#save').click(function() {	   
     $('#save').hide();
     $('.returned').toggle();
  });
 
  function add_fields(link, association, content) {  
    var new_id = new Date().getTime();  
    var regexp = new RegExp("new_" + association, "g");  
    $(link).parent().before(content.replace(regexp, new_id));  
  }
