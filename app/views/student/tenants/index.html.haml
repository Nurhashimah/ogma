- model_class = Tenant
.page-header
  %h1= t('student.tenant.list_full')#, :default => model_class.model_name.human.pluralize

.row
  .navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
    %ul.nav.navbar-nav
      //%li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'new'))), new_student_tenant_path
    %ul.nav.navbar-nav.navbar-right
      %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar"
      %li.dropdown
        %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
          = fa_icon "external-link", text: (t 'actions.export')
          %b.caret
        %ul.dropdown-menu
          %li= link_to (fa_icon "file-excel-o", text: (t "student.tenant.list")), student_tenants_path(params.merge(format: "xls"))
          %li= link_to (fa_icon "file-pdf-o", text: (t "student.tenant.list")), tenant_report_student_tenants_path(params.merge(format: 'pdf' ))

.row
  .col-md-12
    .alert.alert-warning
      %strong=(t 'remark')+": "
      %span{style: 'color: red;'} *
      =t('location.administered')
.row
  %table.table-striped.table-hover.ogma
    %thead
      %tr
        %th{width: '9%'}= t 'location.code'
        %th{width: '10%'}= t 'student.students.icno'
        %th{width: '18%'}= t 'student.name'
        %th{width: '12%'}= (current_user.college.code=='amsas' && current_user.college.name=='amsas') ? (t 'student.students.apmmno') : (t 'student.students.matrixno')
        %th{width: '7%'}= t 'student.tenant.key.provided'
        %th{width: '7%'}= t 'student.tenant.key.expected'
        %th{width: '7%'}= t 'student.tenant.key.returned'
        %th{width: '7%'}= t 'student.tenant.vacate'
        %th{width: '8%'}= t 'student.tenant.damage_status'
        %th{width: '15%'}= t 'student.tenant.damage_type'

    %tbody
    = render "index_search"
    - @tenants.group_by{|x|x.student.intakestudent}.each do |sintake, tenants|
      %tr 
        %td.group{colspan: 10}=sintake.siri_programmelist
      - for tenant in tenants
        - unless tenant.student.nil?

          - if tenant.damages.count==0; damages_text = (t 'no2'); else damages_text = (t 'yes2'); end
          - damage_description = []

          %tr
            %td
              = link_to tenant.location.try(:combo_code), campus_location_path(tenant.location)
              .text-red="*" if [tenant.location.try(:staffadmin_id)].include?(current_user.userable_id)
            %td= link_to formatted_mykad(tenant.try(:student).try(:icno)), student_tenant_path(tenant)
            %td= link_to tenant.try(:student).try(:student_with_rank), student_path(tenant.student)
            %td= tenant.try(:student).try(:matrixno)
            %td= tenant.keyaccept.try(:strftime, '%d %b %Y')
            %td
              - if tenant.keyexpectedreturn < Date.today && tenant.keyreturned.blank?
                .text-red=tenant.keyexpectedreturn.try(:strftime, '%d %b %Y')
              - else
                =tenant.keyexpectedreturn.try(:strftime, '%d %b %Y')
            %td= tenant.keyreturned.try(:strftime, '%d %b %Y')
            %td= tenant.force_vacate? ? (t 'yes2') : (t 'no2')
            %td= damages_text
            %td
              - if tenant.damages.count>0
                - tenant.damages.each{|t|damage_description << t.damage_type}
                = damage_description.uniq.to_sentence

          //%td= link_to image_tag("printer.png", :border => 0, :title => 'Borang Asrama'), :action => 'borang_asrama', :id => tenant
  .right{style:"padding:0 30px; margin:0;"}= paginate @tenants, :theme => 'twitter-bootstrap-3'
