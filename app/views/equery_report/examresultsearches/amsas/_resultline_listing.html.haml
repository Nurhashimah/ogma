/ Nav tabs
%ul.nav.nav-tabs
  %li.active= link_to  (t 'equery.result'), "#search", "data-toggle" => "tab"

/ display 
.tab-content{style:"padding-top:1em"}
  #search_details.tab-pane.active  
        
    /additional heading
    .col-md-8.col-md-offset-2
      %dl.dl-horizontal
        = render :partial => "equery_report/examresultsearches/#{current_user.college.code}/search_criteria", locals: {examresultsearch: examresultsearch, resultlines: resultlines}
          
        %dt=(t 'equery.total')
        %dd=@arr.count==0 ? @arr.count.to_s : @arr.count.to_s+" "+(t 'records')+" "+(t 'for')+" "+examresultsearch.examresults.count.to_s+" "+(t 'training.intake.title').downcase

    /display result
    .col-md-11
      %br
      - if @arr.count > 0
        %table.table.table-bordered.table-condensed.table-hover.equery
          %head
          %body
            - cnt2=0
            
            - resultlines.group_by{|x|x.examresult.intake_id}.each do |result_intake, resultlines2|
              - subjects =Programme.find(Intake.find(result_intake).programme_id).descendants.where(course_type: 'Subject').sort_by{|x|[x.parent, x.code]}
              - total_columns=subjects.count+5
              - half=total_columns/2
              
              /heading intake
              %tr.info
                %th.centre{colspan: "#{total_columns}"}=(t 'equery.examresult.intake')+Intake.find(result_intake).siri_programmelist
              
              /heading examresult, 1 intake may hv multiple examresults
              - cnt=0
              - resultlines2.group_by{|y|y.examresult}.each do |examresult, resultlines3|
                %tr.success
                  %th=cnt+=1
                  %th.centre{colspan: "#{half}"}=(t 'equery.examresult.exam_date')+" : "+examresult.examdts.try(:strftime, '%d-%m-%Y')+" - "+examresult.examdte.try(:strftime, '%d-%m-%Y')
                  %th.centre{colspan: "#{half-1}"}=link_to (fa_icon("print", text: (t 'equery.examresult.exam_result'))), results_exam_examresults_path(id: examresult.id, format: "pdf")
                
                /heading student slip
                %tr.warning
                  %th{colspan: 3}=t('training.programme.module')
                  - subjects.group_by{|x|x.parent_id}.each do |parent, subject_list|
                    %th.centre{colspan: "#{subject_list.count}"}=Programme.find(parent).subject_list+" (%)"
                  %th.centre{rowspan: 2} Status
                  %th.centre{rowspan: 2}=t('equery.links')
                %tr.warning
                  %th No
                  %th=t('exam.examresult.student')
                  %th=t('student.icno')
                  - for subject in subjects
                    %th.centre=h subject.code
             
                - for examslip in resultlines3
                  %tr
                    %td=cnt2+=1
                    %td=formatted_mykad(examslip.student.icno)
                    %td=examslip.student.student_with_rank
                    - for subject in subjects
                      - grades=Grade.where(subject_id: subject.id).where(student_id: examslip.student_id)
                      %td.centre
                        - if grades.count > 0 
                          - finalscore=grades.first.finalscore
                          .small
                            /=number_with_precision(grades.first.finalscore, precision: 2)
                            =pukka(finalscore)
                    %td.centre=h examslip.render_status
                    %td.centre= link_to (fa_icon("print", text: (t 'equery.examresult.exam_slip'))), examination_slip_exam_examresults_path(id: examslip.id, format: "pdf")
              %tr
                %td{colspan: "#{total_columns}"}
            
      .right{style:"padding: 0 10px; margin:0;"}= paginate resultlines, :theme => 'twitter-bootstrap-3', :pagination_class => 'pagination-sm'