- model_class = Librarytransactionsearch
.page-header
  %h1=t('equery.library_transaction.search')
= render 'shared/flashes'

.row
  .col-md-offset-1
    / Nav tabs
    %ul.nav.nav-tabs
      %li.active= link_to (t 'equery.library_transaction.search_data'), "#search", "data-toggle" => "tab"

    / display 
    .tab-content{style:"padding-top:1em"}
      #search_details.tab-pane.active
        
        /additional heading
        .col-md-8.col-md-offset-2
          %dl.dl-horizontal
            %dt=(t 'time.years').titleize
            %dd=h @librarytransactionsearch.yearstat.year 
            
            %dt=t('equery.library_transaction.total')
            %dd=h @librarytransactionsearch.librarytransactions.where.not(ru_staff: nil).count 

        /A. Jumlah Terkumpul Buku Dipinjam
        .col-md-10.col-md-offset-1
          %br
          
          - if @librarytransactionsearch.accumbookloan == 1
            %b=t('equery.library_transaction.accumulated_loan')
            
            - checkout_months=Hash[[1,2,3,4,5,6,7,8,9,10,11,12].map{|x|[x, Hash["staff" => 0, "student" => 0]]}]
            - @librarytransactionsearch.librarytransactions.where(ru_staff: true).group_by{|y|y.checkoutdate.month}.each do |checkout_month, transactions|
              - checkout_months[checkout_month]["staff"]=transactions.count
            - @librarytransactionsearch.librarytransactions.where(ru_staff: false).group_by{|y|y.checkoutdate.month}.each do |checkout_month, transactions|
              - checkout_months[checkout_month]["student"]=transactions.count
              
            - acc_staff=[]
            - acc_student=[]
            - amt_stu=0
            - amt_stf=0
            - checkout_months.each do |k, v|
              - acc_staff << amt_stf+=v["staff"]
              - acc_student << amt_stu+=v["student"]
              
            %table.table.table-bordered.table-condensed
              %head 
                %tr
                  %th.bg-grey.centre{width: '6%'}=(t 'time.months').upcase
                  - 1.upto(12) do |no|
                    %th.bg-grey.centre{width: '6%'}= t(:'date.month_names')[no] 
                  %th.bg-grey.centre{width: '6%'}=(t 'equery.total').upcase
                %tr
                  %th.bg-grey=t('equery.library_transaction.staff')
                  - 0.upto(11) do |no|
                    %td.centre=acc_staff[no]
                  %th.bg-grey.centre=acc_staff.last
                %tr
                  %th.bg-grey=t('equery.library_transaction.student')
                  - 0.upto(11) do |no|
                    %td.centre=acc_student[no]
                  %th.bg-grey.centre=acc_student.last
                %tr
                  %td{colspan: 13}
                  %th.bg-grey.centre=acc_student.last+acc_staff.last

        /B. Peminjam Mengikut Program
        .col-md-10.col-md-offset-1
          - if @librarytransactionsearch.programme == 1 
            %b=t('equery.library_transaction.borrower_programme')
            
            - @count_programmes=Hash[Programme.roots.pluck(:id).map{|x|[x, 0]}]
            - @librarytransactionsearch.librarytransactions.where(ru_staff: false).group_by{|x|x.student.course_id}.each do |courseid, transactions|
              - @count_programmes[courseid]+=transactions.count
           
            - Programme.roots.group_by(&:course_type).each do |course_type, programmes|
              %b= ": "+course_type.upcase
              %table.table.table-bordered.table-condensed
                %tr
                  %th.bg-grey=(t 'equery.library_transaction.programme').upcase
                  - for programme in programmes
                    %th.centre.bg-grey=(programme.programme_list+"<br>(#{programme.id})").html_safe
                  %th.centre.bg-grey=t('equery.total')
                %tr
                  %th.bg-grey=t('equery.library_transaction.student')
                  - total=0
                  - for programme in programmes
                    %th.centre=@count_programmes[programme.id]
                    - total+=@count_programmes[programme.id]
                  %th.centre.bg-grey=total
         
        /C. Jumlah Terkumpul Denda yang Dipungut
        .col-md-11
          - if @librarytransactionsearch.fines == 1
            %b=t('equery.library_transaction.accumulated_fine_collected')
            
            - monthly_fines=[0,0,0,0,0,0,0,0,0,0,0,0]
            - accu_fines=[]
            - @librarytransactionsearch.librarytransactions.where.not(ru_staff: nil).where.not(fine: nil).group_by{|x|x.checkoutdate.month}.each do |checkout_month, transactions|
              - monthly_fines[checkout_month-1]=transactions.map(&:fine).sum.to_f
            - acc_fine=0
            - monthly_fines.each_with_index do |y, ind|
              - accu_fines << acc_fine+=monthly_fines[ind]
            
            %table.table.table-bordered.table-condensed
              %head 
                %tr
                  %th.bg-grey.centre{width: '6%'}=(t 'time.months').upcase
                  - 1.upto(12) do |no|
                    %th.bg-grey.centre{width: '6%'}= t(:'date.month_names')[no] 
                  %th.bg-grey.centre{width: '6%'}=(t 'equery.total').upcase
                %tr
                  %th=t('equery.library_transaction.fines')
                  - 0.upto(11) do |no|
                    %td.centre=ringgols(accu_fines[no])
                  %th.centre=ringgols(accu_fines.last)
          
        /D. Jumlah Pinjaman Buku Mengikut Klasifikasi - 'National Library of Medicine' (NLM) / 'Dewey Decimal Classification' (DDC)
        .col-md-11
          - if @librarytransactionsearch.bookloans == 1 
            /NOTE - international book classifications : 
            /1) Call No @ LC No - Library of Congress (LC) Classification System - http://www.lib.sfu.ca/find/what-call-number
            /2) NLM classification - National Library of Medicine - https://www.nlm.nih.gov/class/ - sample : WY150BAR
            /3) DDC Classification - Dewey Decimal Classification - https://en.wikipedia.org/wiki/Dewey_Decimal_Classification - sample :

            - if current_user.college.code=='kskbjb'
              /NLM classification is use - field : classlcc
              - nlm_subjects=Book.nlm_subjects
              - classification=Hash[nlm_subjects.map{|x|[x, 0]}]
              - fullcodes=@librarytransactionsearch.librarytransactions.where.not(ru_staff: nil).joins(:accession).map{|x|x.accession.book.classlcc}
              
              - for fullcode in fullcodes
                - unless fullcode.blank?
                  /first occurance of letter set - sample : "ahhh666uuuiii"[/[a-zA-Z]+/] - ahhh
                  - extract=fullcode[/[a-zA-Z]+/]
                  - unless extract.nil?
                    - ext=extract.size > 2 ? extract[0,2] : extract
                    - if nlm_subjects.include?(ext.downcase)
                      - for nlm_subject in nlm_subjects
                        - if ext.downcase==nlm_subject
                          - classification[nlm_subject]+=1
                    - else
                      - classification["others"]+=1
                - else
                  /No LCC data - classlcc field is blank
                  - classification["others"]+=1
              
              /
              
            - elsif current_user.college.code=='amsas'
              /DDC classification is use - field : classddc
              
              - ddc_subjects=Book.ddc_subjects
              - classification=Hash[ddc_subjects.map{|x|[x, 0]}]
              - fullcodes=@librarytransactionsearch.librarytransactions.where.not(ru_staff: nil).joins(:accession).map{|x|x.accession.book.classddc}
                            
              - for fullcode in fullcodes
                - unless fullcode.blank?
                  - subject=fullcode.split(".")[0]
                  - if all_digits(subject)==true
                    - subject=subject.to_i
                    - ddc_subjects.each_with_index do |ddc_subject, ind|
                      - if ind < ddc_subjects.count-1
                        - if subject >=ddc_subject.to_i && subject < ddc_subjects[ind+1].to_i 
                          - classification[ddc_subject]+=1      
                - else
                  /No DDC data - classddc field is blank
                  - classification["none"]+=1
            
            - if current_user.college.code=='kskbjb'
              %b=(t 'equery.library_transaction.by_nlm')
              = render partial: 'display_classification', locals: {classification: classification}
            - else
              .col-md-8.col-md-offset-1
                %b=(t 'equery.library_transaction.by_ddc')
                = render partial: 'display_classification', locals: {classification: classification}

        /E. Butiran Transaksi
        .col-md-10.col-md-offset-1
          - if @librarytransactionsearch.details == 1
            
            %b=t('equery.library_transaction.details')
            %table.table.table-bordered.table-condensed
              %head
                %tr
                  %th.bg-grey No
                  %th.bg-grey=t('library.book.title')
                  %th.bg-grey=t('library.book.accessionno')
                  %th.bg-grey=t('equery.library_transaction.classification')
                  %th.centre.bg-grey=t('library.transaction.checkoutdate')
                  %th.centre.bg-grey=t('equery.library_transaction.programme')
              %body
                - no=0
                - for transaction in @librarytransactionsearch.librarytransactions.where.not(ru_staff: nil).order(checkoutdate: :asc)
                  %tr
                    %td=no+=1
                    %td=transaction.accession.book.title
                    %td=transaction.accession.accession_no
                    %td=current_user.college.code=='kskbjb' ? transaction.accession.book.classlcc : transaction.accession.book.classddc
                    %td.centre=transaction.checkoutdate.try(:strftime, "%d-%m-%Y")
                    %td.centre=transaction.ru_staff==false ? "(#{transaction.student.course_id})" : (t 'equery.not_related')
          
.row
  .col-md-6.col-md-offset-3
    %hr
    .form-actions
      = link_to content_tag(:i, "", :class => "fa fa-arrow-left") +" #{t('equery.title')} - #{t('library.title')}", "/equery_reports?query_module=7", class: 'btn btn-primary'
      %span{style: 'padding-left: 20px;'}= link_to content_tag(:i, "", :class => "fa fa-arrow-left ") + " " + t('.back', :default => t("helpers.links.back")), new_equery_report_librarytransactionsearch_path(searchlibrarytransactiontype: 1),  :class => 'btn btn-default'
