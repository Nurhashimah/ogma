.row
  .col-md-10.col-md-offset-2
    - if @searchevaluatecoursetype=='1' || @searchevaluatecoursetype==1      
      /:programme_id, :subject_id, :evaldate, :lecturer_id, :invite_lecturer, :evaldate_end, :programme_id2, :is_staff, :visitor_id
      
      /////// 
      - if current_user.college.code=='amsas'
        .small.text-grey
          For checking only
          - for exm in Exam.all
            %br
            = "MODULE: "+exm.subject.parent.subject_list+" --- "+exm.subject.subject_list+" : "+exm.subject_id.to_s
        %br

      ///////
      
      / Nav tabs
      %ul.nav.nav-tabs
        %li.active= link_to (t 'equery.search_by'),"#search", "data-toggle" => "tab"

      .tab-content{style:"padding-top:1em"}
        #search.tab-pane.active
          %br
          .col-md-offset-2
            .form-group
              .col-sm-2.control-label
                = f.label (t 'equery.evaluate_course.programme_id') 
              .col-md-5
                = f.select :programme_details, options_for_select(Programme.roots.map(&:programme_list)), {:include_blank => (t 'select')}, {class: 'form-control mandatory'}
   
            - if current_user.college.code=='amsas'
              .form-group
                .col-sm-2.control-label
                  = f.label (t 'equery.evaluate_course.invite_lecturer')
                .col-md-4
                  - invite_list=[]
                  - EvaluateCourse.where('subject_id is null').group_by{|x|x.stucourse}.each do |course, evaluations|
                    - aa=[[(t 'select'), ""]]
                    - evaluations.group_by{|x|x.visitor}.each do |invite, exms_list|
                      - aa << [invite.name, invite.id]
                    - invite_list << [course.programme_list, aa]
                  = f.select :visitor_id, grouped_options_for_select(invite_list), {:include_blank => (t 'select')}, {class: 'form-control mandatory'}
                  
            - else
              .form-group#span_subject
                .col-sm-2.control-label
                  = f.label (t 'equery.evaluate_course.subject_id') 
                .col-md-5
                  = f.select :subject_id, grouped_options_for_select(Programme.subject_groupbyprogramme2), {:include_blank => (t 'select')}, {class: 'form-control mandatory'}
                
              .form-group#span_invite
                .col-sm-2.control-label
                  = f.label (t 'equery.evaluate_course.invite_lecturer')
                .col-md-4
                
              .form-group#span_staff
                .col-sm-2.control-label
                  = f.label (t 'equery.evaluate_course.lecturer_id')
                .col-md-4
              
            .form-group
              .col-sm-2.control-label
                = f.label (t 'equery.evaluate_course.evaldate')
              .col-md-2
                = f.text_field :evaldate, class: 'form-control date_picker_reverse'