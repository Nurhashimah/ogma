- model_class = Student
.page-header
  %h1= t('student.students.import_excel')
  %br=link_to (t 'student.students.list'), students_path
= render 'shared/flashes'
  
%br
= form_tag import_students_path, multipart: true do
  .row
    .form-group
      .col-md-4.col-md-offset-2
        = file_field_tag :file
      .col-md-1
        = submit_tag "Import", :class => 'btn btn-primary'
    .form-group
      .col-md-4.col-md-offset-2
        - if current_user.college.code=="amsas"
          = link_to (t 'excel_format'), '/public/excel_format/student_import_amsas.xls', :action => 'download_excel_format'
        - else
          = link_to (t 'excel_format'), '/public/excel_format/student_import.xls', :action => 'download_excel_format_amsas'
%br
%h4=t('library.book.excel_conditions')

%br=t('library.book.condition_line')
%ol
  %li 
    %b icno
    %font{color: "red"}*
    =" - "+t('student.students.icno_must_unique')
  %li 
    %b name
    %font{color: "red"}*
    =" - "+t('student.students.name_must_not_blank')
  %li 
    %b matrixno
    =" - "+t('student.students.matrixno')
  %li 
    %b sstatus
    %font{color: "red"}*
    - if current_user.college.code=="amsas"
      =" - "+t('student.students.sstatus_must_use2')
    - else
      =" - "+t('student.students.sstatus_must_use')
  %li 
    %b sstatus_remark
    ="- ("+t('student.students.additional_notes')+t('student.students.sstatus_remark')+" "+(t 'or').upcase+" "+t('student.students.sstatus_remark2')+" "+" - "+t('student.students.repeated_notes')+")"
  %li 
    %b stelno
    %font{color: "red"}*
    =" - "+t('student.students.stelno_must_not_blank')
  %li 
    %b ssponsor
    %font{color: "red"}*
    =" - "+t('student.students.ssponsor_must_use')
  %li 
    %b gender
    %font{color: "red"}*
    =" - "+t('student.students.gender_must_use')
  %li 
    %b sbirthdt
    %font{color: "red"}*
    =" - "+t('student.students.sbirthdt_must_use')
  %li 
    %b mrtlstatuscd
    %font{color: "red"}*
    =" - "+t('student.students.mrtlstatuscd_must_use')
  %li 
    %b semail
    =" - "+t('student.students.semail')
  %li 
    %b regdate
    =" - "+t('student.students.regdate_must_use')
  %li 
    %b course_id
    %font{color: "red"}*
    =" - "+t('student.students.course_id_accordingly')
    %ul
      - Programme.roots.sort.each do |course|
        %li= course.id.to_s+" - "+course.name
  %li 
    %b offer_letter_serial
    =" - "+t('student.students.offer_letter_serial')
  %li 
    %b end_training
    =" - "+t('student.students.end_training_must_use')
  /%li 
  /  %b intake
  /  %font{color: "red"}*
  /  =" - "+t('student.students.intake_must_use')
  %li
    %b intake_id
    %font{color: "red"}*
    =" - "+t('student.students.intake_id_accordingly')
    %ul
      - Intake.all.group_by{|x|x.monthyear_intake}.each do |monthyear_int, intakes|
        - for intake in intakes.sort_by{|y|y.id}
          %li= intake.id.to_s+" - Siri "+monthyear_int.strftime('%m/%Y')+" | "+intake.programme.programme_list
  %li
    %b race2
    =" - "+t('student.students.race2_accordingly')
    %ul
      - Student::RACE.each do |name, id|
        %li=id.to_s+" - "+name
  %li 
    %b address
    =" - "+t('student.students.address')
  %li 
    %b address_posbasik 
    =" - "+t('student.students.address_posbasik')
  %li
    %b college_id
    = " - "+t('student.students.college_id_default')+" "+current_user.college.name.upcase+" : "+current_user.college_id.to_s
  %li
    %b birthplace
    %font{color: "red"}*
    =" - "+t('student.students.birthplace_accordingly')
    %ul
      - Student::STATECD.each do |v,k|
        %li= v+" - "+v.to_s
  %li
    %b religion
    %font{color: "red"}*
    =" - "+t('student.students.religion_accordingly')
    %ul
      - Student::RELIGION.each do |v,k|
        %li= v+" - "+v.to_s
        
%br
%B 
  %u=t('notes')+" : "
%font{color: "red"}*
=t('compulsory_fields')
%BR
%BR