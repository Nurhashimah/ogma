.col-md-offset-2
  .row
    %b=t 'exam.exams.filters'
    .small 
      =t('exam.exams.programme_subject_topic')

  .form-group
    .col-sm-2.control-label
      = f.label :programme_id
    .col-md-6
      = select_tag("course_name", options_for_select(@programme_names), :include_blank => (t 'select'),  class: 'selectpicker')

  .form-group
    .col-sm-2.control-label
      = f.label :subject_id
    .col-md-5
      = select_tag("subjects", grouped_options_for_select(@subjects), :include_blank => (t 'select'), :class => 'form-control')
      /= @subjects

  .form-group
    .col-sm-2.control-label
      = f.label :topic_id
    .col-md-5
      = select_tag("topics", grouped_options_for_select(@topics), :include_blank => (t 'select'), :class => 'form-control')
      /= @topics
  
  /Part 1 : Display AVAILABLE questions (of selected Topic)
  /https://coderwall.com/p/kqb3xq/rails-4-how-to-partials-ajax-dead-easy   
  /= text_field_tag(:testing)
  /= text_field_tag(:test2)
  = hidden_field_tag(:current_exam, @exam.id)
  .row
    #question_title
    .col-md-10#question_list{:style=>"display: none;"}
      = render partial: 'item_grid', locals: {items: @items}
    
  /Part 2 : Display EXISTING questions
  .row 
    %b=t('exam.exams.existing')
  .row
    .col-md-10  
      - if @exam.examquestions.count>0  
        %table.table.table-bordered
          %thead
            %tr
              %th=t('exam.exams.sequ')
              %th=t('exam.examquestion.questiontype')
              %th=t('exam.exams.subject_topic_name')
              %th
                =t('exam.examquestion.question') 
                & 
                =t('exam.examquestion.answer')
              %th=t('exam.examquestion.marks')
              %th=t('select')
          %tbody
            - if @exam.sequ!= nil 
              - sequ = @exam.sequ.split(",")
              - count=0
              - @sequence = [(t 'select'),1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]
              - @exam.examquestions.group_by{|y|y.questiontype}.sort.each do |qtype,examquestions|
                - for examquestion in examquestions
                  %tr
                    %td
                      - if @exam.sequ!= nil
                        = select_tag "exam[seq][]", options_for_select(@sequence,sequ[count].to_i)
                      - else 
                        = select_tag "exam[seq][]", options_for_select(@sequence)
                    %td=h examquestion.questiontype
                    %td
                      =h examquestion.topic.parent.code
                      | 
                      =examquestion.topic.subject_list
                    %td=render 'question_by_type', :item => examquestion
                    %td=h examquestion.marks
                    %td= check_box_tag "exam[examquestion_ids][]", examquestion.id, @exam.examquestions.include?(examquestion)
                  - count+=1