- model_class = Grade
.page-header
  %h1= t 'exam.grade.multiple_edit'
= render 'shared/flashes'

- @subjects_of_grades = @grades.map(&:subject_id).uniq.count

.row
  .col-md-12
    .alert.alert-info
      %font{:style=>"size: -2; color: blue;"}
        %b= t 'exam.grade.total_formative'
        =" = "+t('exam.grade.sum_of_scores').to_s
        %b CA+MSE
        =" = "+t('exam.grade.total_formative').to_s+" *  ( 100 - "+t('exam.grade.examweight')+") /100"
        %br
        %b= t 'exam.grade.summative'
        =" = ("+t('exam.grade.final_exam')+" * "+t('exam.grade.examweight')+") / 100, "
        %b= t 'exam.grade.total_marks'
        =" = CA+MSE + "+ t('exam.grade.summative')

- if @subjects_of_grades==1
  /= form_tag update_multiple_exam_grades_path, :id => "form1", :html => {:method => :put} do |f| 
  /ABOVE --- f didn't work coz not bind with any specific record, instead use form_for & bind the first record.
  /= form_for [:exam, @grades_obj], url: update_multiple_exam_grades_path, html: {:method => :post} do |f|
  = form_for [:exam, @grades[0]], url: update_multiple_exam_grades_path, html: {:method => :post} do |f|
    = hidden_field_tag :redirect_location, exam_grades_path 

    .row  
      .col-md-10.col-md-offset-1
        / Nav tabs
        %ul.nav.nav-tabs
          %li.active= link_to ((t 'exam.grade.grade_details')),"#grade_details", "data-toggle" => "tab"

        / display 
        .tab-content{style:"padding-top:1em"}
          .col-md-offset-2
            .row
              .form-group
                .col-sm-2.control-label
                  %b= t 'exam.grade.subject_id'
                .col-md-5=@grades[0].subjectgrade.subject_list
            - diploma_ids=Programme.roots.where(course_type: 'Diploma').pluck(:id)
            - progid=Programme.where(id: @grades.first.subject_id).first.root_id
            .row
              .form-group
                .col-sm-2.control-label
                  %b= t 'exam.grade.examweight'
                .col-md-1
                  - @sum_weight = @grades.map(&:examweight).uniq.count if @grades.count >= 1 
                  - if diploma_ids.include?(progid)
                    = text_field_tag "grade[summative_weightage]", 70, class: 'form-control', readonly: 'readonly'
                  - else
                    /= f.text_field :examweight, value: 0, class: 'form-control'
                    =select_tag "grade[summative_weightage]", options_for_select(DropDown::WEIGHTAGE, @grades[0].examweight.to_i), {class: 'selectpicker'}
                  - if @sum_weight>1 
                    %span{:style=>"color:red;"}*
                - if diploma_ids.include?(progid)
                  .col-md-1
                    \%
            /.row
            /  .form-group
            /    .col-sm-2.control-label
            /      %b= t 'exam.grade.formative_scores'

          #grade_details.tab-pane.active
            .col-md-10
              %br
              = render :partial =>'formative_template', :locals=>{:f=>f}
              = render :partial => 'formative_contents', :f=>f
            /.col-md-11
            /  %br
            /  = render :partial => 'form_multiple', :f=>f
    
      .col-md-offset-1  
        .form-group
          .col-sm-offset-3.col-sm-1
            = link_to content_tag(:i, "", :class => "fa fa-arrow-left ") + " " + t('.back', :default => t("helpers.links.back")), exam_grades_path, :class => 'btn btn-default'
          .col-sm-2
            = submit_tag t('update'), :name => :grade_submit_button, class: "btn btn-primary"         
- else
  .row
    .col-md-12
      .alert.alert-info
        = t 'exam.grade.student_same_exam'
  .row
    .col-md-offset-1  
      .form-group
        .col-sm-offset-3.col-sm-1
          = link_to content_tag(:i, "", :class => "fa fa-arrow-left ") + " " + t('.back', :default => t("helpers.links.back")), exam_grades_path, :class => 'btn btn-default'

//below-not working yet-          
/TRIAL TRIAL TRIAL TRIAL TRIAL TRIAL TRIAL
/- @score_count=@grades[0].scores.count
/- @student_count = @grades.map(&:student_id).uniq.count
/=hidden_field_tag "grade[score_count]", @score_count
/=hidden_field_tag "grade[student_count]", @student_count
/=hidden_field_tag "grade[column_count]", 4

//23June2013-add total fullmarks
/- @examid_exist = Exam.where('subject_id=? AND name=?', @grades[0].subject_id, 'F').first
//use FIRST-[0], must unique, only 1
//-EXAM ID (EXIST) YG DIBACA SEPATUTNYE FINAL 
/- if @examid_exist
/  - @examid = @examid_exist.id
/=hidden_field_tag "grade[fullmarks]", Exammark.fullmarks(@examid)
//23June2013-add total fullmarks

/:javascript
/  $(".i1").keyup(function() {  
/    var studentcount = $("#grade_student_count").val();
/    var mcqcount = $("#grade_score_count").val();
/    var fullmarks = $("#grade_fullmarks").val();
/    for (var i=0;i<studentcount;i++)
/    {
/      for (var j=0;j<mcqcount;j++)
/      {
/        window["mcq"+i+j] = document.getElementById("score_"+i+"_"+j).value;
/        window["fw"+i+j] = document.getElementById("formweight_"+i+"_"+j).value;
/       }
/    }
/    for (var i=0;i<studentcount;i++)
/    {
/      window["examweightage"+i] = document.getElementById("examweight"+i).value;
/      window["tfinalexam"+i] = document.getElementById("finalexam"+i).value;
/    }
/    for (var i=0;i<studentcount;i++)
/    {
/      window["totalmcq"+i] = document.getElementById("totalformative"+i);
/      window["camse"+i] = document.getElementById("caplusmse"+i);
/      window["tfinalscore"+i] = document.getElementById("finalscore"+i); 
/      window["tsummative"+i] = document.getElementById("summative"+i);
/    }
/    for (var i=0;i<studentcount;i++)
/    {
/      var a = 0
/      for (var k=0;k<mcqcount;k++)
/      {
/        a=a+(((window["mcq"+i+k])*1))
/      }
/      var b = 0
/      for (var m=0;m<mcqcount;m++)
/      {
/        b=b+((window["mcq"+i+m])*1)
/      }
/      ((window["totalmcq"+i]).value) = a;
/      (window["camse"+i]).value = b;
/      window["tsummative"+i].value = ((window["tfinalexam"+i]*1)/fullmarks*(window["examweightage"+i]*1))
/      window["tfinalscore"+i].value = ((window["camse"+i]).value*1)+(window["tsummative"+i].value*1)
/    }
/  });

/  $(".j1").keyup(function() {  
/    var studentcount =  document.getElementById("grade_student_count").value;
/    for (var i=0;i<studentcount;i++)
/    {
/      window["examweightage"+i] = document.getElementById("examweight"+i).value;
/      window["totalmcq"+i] = document.getElementById("totalformative"+i).value;
/      window["tsummative"+i] = document.getElementById("summative"+i).value;
/    }
/    for (var i=0;i<studentcount;i++)
/    {
/      window["camse"+i] = document.getElementById("caplusmse"+i);
/      window["tfinalscore"+i] = document.getElementById("finalscore"+i); 
/    }
/    for (var i=0;i<studentcount;i++)
/    {
/      window["camse"+i].value = (window["totalmcq"+i]) * ((100-(window["examweightage"+i]*1))/100)
/      window["tfinalscore"+i].value = (window["camse"+i].value*1)+(window["tsummative"+i]*1)
/    }
/  });

/  $(".k1").keyup(function() {  
/    var studentcount =  document.getElementById("grade_student_count").value;
/    for (var i=0;i<studentcount;i++)
/    {
/      window["examweightage"+i] = document.getElementById("examweight"+i).value;
/      window["finalexam"+i] = document.getElementById("finalexam"+i).value;
/      window["totalmcq"+i] = document.getElementById("totalformative"+i).value;
/     }
/    for (var i=0;i<studentcount;i++)
/    {
/      window["tsummative"+i] = document.getElementById("summative"+i);
/      window["tfinalscore"+i] = document.getElementById("finalscore"+i);	
/    }
/    for (var i=0;i<studentcount;i++)
/    {
/      window["tsummative"+i].value = (window["finalexam"+i]*1)*((window["examweightage"+i]*1)/100)
/      window["tfinalscore"+i].value = ((window["tsummative"+i].value)*1)+((window["totalmcq"+i]) * ((100-(window["examweightage"+i]*1))/100))
/    }
/  });

