/- if @subject_id != nil
/  - @subject = @subject_id
/  - @programme = @preselect_prog
/- else 
/  - @subject = @grade.subject_id
/  - @programme = @grade.subjectgrade.root_id

- if @grade.new_record?
  - @subject = @subject_id
  - @programme = @preselect_prog
- else
  - @subject = @grade.subject_id
  - @programme = @grade.subjectgrade.root_id
- diploma=Programme.where(course_type: 'Diploma')
- @radiografi=diploma.where('name ILIKE?', '%Radiografi%').first.id
- @carakerja=diploma.where('name ILIKE?', '%Jurupulih Perubatan Cara Kerja%').first.id
.row
  .col-md-10.col-md-offset-1
    / Nav tabs
    %ul.nav.nav-tabs
      %li.active= link_to (t 'exam.grade.grade_details'),"#grade_details_edit", "data-toggle" => "tab"
      %li= link_to (t 'exam.grade.sent_bpl'),"#sent_to_bpl_edit", "data-toggle" => "tab"
      %li= link_to (t 'exam.grade.summative_final_details'),"#summative_final_details_edit", "data-toggle" => "tab"
      
    /display  
    .tab-content{style:"padding-top:1em"}
      .col-md-offset-2 
        %br
        /.form-group
        /  .col-sm-2.control-label
        /    =f.label t 'exam.grade.student_id', for: :student_id
        /  .col-md-2
        /    - if @grade.id.nil? 
        /      = f.collection_select :student_id, @student_list, :id, :matrix_name, {:include_blank => t('select')},{class: 'selectpicker', "data-width"=>'360px'} 
        /    - else
        /      = f.collection_select :student_id, @student_list, :id, :matrix_name, {:include_blank => t('select'), :selected=>@grade.student_id},{class: 'selectpicker', "data-width"=>'360px'} 
        .form-group
          .col-sm-2.control-label
            = f.label t 'exam.grade.programme', for: :programme
          .col-md-4
            /= f.collection_select :programme_id,  @programme_list, :id, :programme_list, {:include_blank => t('select'),:selected=> @programme.to_i}, {class: 'selectpicker', "data-width"=>'360px'} 
            - if @grade.subject_id
              - programme=@grade.subjectgrade.root.programme_list
            /- else
            /  - programme=@programme_detail if @programme_detail
            = select_tag("grade[programme_id]", options_for_select(@programme_names, programme), :include_blank => (t 'select'),  class: 'form-control mandatory')
            
        .form-group
          .col-sm-2.control-label
            = f.label t 'exam.grade.subject_id', for: :subject_id
          .col-md-4
            /- if @programme.nil?
            /  = f.collection_select :subject_id,  @subject_list, :id, :programme_subject, {:include_blank => t('select'), :selected=> @subject.to_i}, {class: 'selectpicker', "data-width"=>'360px'} 
            /- else
            /= f.collection_select :subject_id,  @subject_list, :id, :subject_list, {:include_blank => t('select'), :selected=> @subject.to_i}, {class: 'selectpicker', "data-width"=>'360px'} 
            = select_tag("grade[subject_id]", grouped_options_for_select(@subjects, @grade.subject_id), :include_blank => (t 'select'), :class => 'form-control mandatory')
        .form-group
          .col-sm-2.control-label
            =f.label t 'exam.grade.student_id', for: :student_id
          .col-md-4
            = select_tag("grade[student_id]", grouped_options_for_select(@students, @grade.student_id), :include_blank => (t 'select'), :class => 'form-control mandatory')

        /TODO: Preselect course in above condition
        /programme_id - when preselected (diploma/posbasic lecturer) - change function will not works for subjects & students list
        
      #grade_details_edit.tab-pane.active
        .col-md-9.col-md-offset-1
          %br
          = f.label t 'exam.grade.formative_scores'
          .row
            .col-sm-4= t 'exam.grade.type'
            .col-sm-4= t 'exam.grade.description' 
            .col-sm-2= (t 'exam.grade.weightage')+" (%) *"
            .col-sm-2= (t 'exam.grade.marks')+" (%) **"
            %hr
          - @count=0
          = f.fields_for :scores do |builder|
            = render 'score_fields', :f => builder, :locals =>{:count=>@count}
            - @count+=1
          %br
          .row
            = link_to_add_fields t('addmore'), f, :scores, "",  t('addmore')
          
          /NOTE - For use during UAT
          /English ONLY (all Diploma programmes)
          /1-Mid Term Exam : Assignment / Case Study (15%)
          /2-On-going Assesment : Assignment / Presentation (10%)
          /3-Affective Assesment : Attendance \/ Punctuality \/ Appearance \/ Enrolment \/ Communication (5%)
   
          /Radiografi 
          /1-Formative Assesment : MCQ & SEQ (15%)
          /2-Student-Centered Assesment : SC1 & SC2 (10%)
          /3-Affective Assesment : Attendance \/ Punctuality \/ Appearance \/ Enrolment \/ Communication (5%)
          
          /Fisioterapi
          /1-Mid Term Exam : <Exampaper> (15%)
          /2-On-going Assessment : Test / Assignment @ Practical Test @ Assignment / Presentation (10%)
          /3-Affective Accessment : Attendance \/ Punctuality \/ Appearance \/ Enrolment \/ Communication (5%)
          
          /Peg Pem Perubatan 
          /1-Test : MCQ (15%) 
          /2-Test : MEQ (10%) 
          /3-Test : OSCE / Assignment / Project (5%)
          
          /CaraKerja 
          /1-CA+MSE (Continuous Assessment+Mid Sem Exam) : <any description> (30%)
          
          /Kejururawatan : use CaraKerja format as spec not yet received from SUP.
          
          %br
          .row
            .col-sm-9= t('exam.grade.confirm_apply_changes2')
            .col-sm-3= submit_tag t('exam.grade.apply_changes'), :name =>:grade_submit_button, class: "btn btn-default" 
          .row
            .col-sm-12=t('exam.grade.diploma_weightage_30')
          .row
            .col-sm-12=t('exam.grade.marks_weightage_range')
            %hr

      #sent_to_bpl_edit.tab-pane
        %br
        = render 'tab_sent_bpl_edit', :f => f

      #summative_final_details_edit.tab-pane
        .col-md-9.col-md-offset-1
          %br
          =f.label t 'exam.grade.summative'
          .row
            .col-sm-3=t 'exam.grade.exam'
            .col-sm-3=t 'exam.grade.description'
            .col-sm-2= t 'exam.grade.weightage'
            .col-sm-2
              = t 'exam.grade.marks'
              - if @programme==@radiografi || @programme==@carakerja
                (100%)
                
            .col-sm-2
              = t 'exam.grade.marks'
              - if Programme.roots.where(course_type: 'Diploma').pluck(:id).include?(@programme.to_i)
                (70%)
              %font{:style=>"color: red;"}*
            %hr
          = render 'tab_summative_edit', :f => f
        .col-md-9.col-md-offset-1
          %br
          =f.label t 'exam.grade.final_details'
        %br
        = render 'tab_final_details_edit', :f => f
 
- latest_paper=Exam.where(subject_id: @grade.subject_id).where(name: 'F').order(created_at: :desc).pluck(:id)
- student_exammark=Exammark.where(exam_id: latest_paper).where(student_id: @grade.student_id).first
- if student_exammark
  - @fullmarks = Exam.where(id: student_exammark.exam_id).first.set_full_marks 
  - totalsummative=student_exammark.totalsummative
- else
  - @fullmarks=0 
  - totalsummative=0
=hidden_field_tag "totalsummative", totalsummative
=hidden_field_tag "full_marks", @fullmarks 
=hidden_field_tag "grade[formative_count]", @count 
=hidden_field_tag "programme_name", Programme.where(id: @programme).first.name if @programme
/$(".i1").keyup(function() {

:javascript
  function add_fields(link, association, content) {  
    var new_id = new Date().getTime();  
    var regexp = new RegExp("new_" + association, "g");  
    $(link).parent().before(content.replace(regexp, new_id));  
  }
:javascript
$(document).ready(function(){ 
  $(".k1").keyup(function() {  
    var formativecount = document.getElementById("grade_formative_count").value;
    var exam1marks = document.getElementById("grade_exam1marks").value;
    var examweight = document.getElementById("grade_examweight").value;
    var programme = document.getElementById("programme_name").value;
    var fullmarks = document.getElementById("full_marks").value;
    var totalsummative2 = document.getElementById("totalsummative").value;

    for (var i=0;i<formativecount;i++)
    {
      window["fmark"+i] = document.getElementById("formative"+i).value;
      window["fweight"+i] = document.getElementById("fweight"+i).value;
      
      window["fmark_field"+i] = document.getElementById("formative"+i);
      if (window["fmark"+i]*1.0 >window["fweight"+i])
      {  window["fmark_field"+i].style.color="red";}
      else
      {  window["fmark_field"+i].style.color="black";}
    }
      
    var finalscore = document.getElementById("grade_finalscore");
    var setgrade = document.getElementById("grade_grading_id");
    var marks70 = document.getElementById("grade_marks_70");
    var exam1marks_field = document.getElementById("grade_exam1marks");
    
    if (exam1marks > fullmarks)
    {  exam1marks_field.style.color="red";}
    else
    {  exam1marks_field.style.color="black";}
    
    totalformative = 0
    for (var i=0;i<formativecount;i++)
    {
      totalformative = totalformative+(window["fmark"+i]*1)
    }
      
    caplusmse = (totalformative*1);
    
    if ((programme=="Radiografi") || (programme=="Jurupulih Perubatan Cara Kerja"))
    {
      summative = (exam1marks*1)*(examweight*1)/100;
    }
    else
    {
      if (fullmarks==examweight)
      { summative=exam1marks*1; }
      else
      {
        if (fullmarks==0)
        {  summative=0;}
        else
        {  summative = (exam1marks*1)/fullmarks*(examweight*1); }
      }
    }
    forgrade = caplusmse+summative;
    finalscore.value = caplusmse+summative;
    
    if (totalsummative2==0.0)
    {  marks70.value = summative;}
    else
    {  marks70.value = totalsummative2;}
    
    if (summative > examweight)
    {  marks70.style.color="red";}
    else
    {  marks70.style.color="black";}

    if (caplusmse+summative > 100)
    {  finalscore.style.color="red";}
    else
    {  finalscore.style.color="black";}

    if ((caplusmse+summative) > 79)
    {
      setgrade.value = 1;
    }
    else if ((caplusmse+summative) > 74)
    {
      setgrade.value = 2;
     }
    else if ((caplusmse+summative) > 69)
    {
      setgrade.value = 3;
    }
    else if ((caplusmse+summative) > 64)
    {
       setgrade.value = 4;
     }
    else if ((caplusmse+summative) > 59)
    {
      setgrade.value = 5;
    }
    else if ((caplusmse+summative) > 54)
    {
      setgrade.value = 6;
    }
    else if ((caplusmse+summative) > 49)
    {
      setgrade.value = 7;
     }
    else if ((caplusmse+summative) > 44)
    {
      setgrade.value = 8;
     }
    else if ((caplusmse+summative) > 39)
    {
      setgrade.value = 9;
     }
    else if ((caplusmse+summative) > 34)
    {
      setgrade.value = 10;
     }
    else if ((caplusmse+summative) > 0)
    {
       setgrade.value = 11;
    }
  });
  
  $(".k1").each(function() {  
    var formativecount = document.getElementById("grade_formative_count").value;
    var exam1marks = document.getElementById("grade_exam1marks").value;
    var examweight = document.getElementById("grade_examweight").value;
    var programme = document.getElementById("programme_name").value;
    var fullmarks = document.getElementById("full_marks").value;
    var totalsummative2= document.getElementById("totalsummative").value;
    

    for (var i=0;i<formativecount;i++)
    {
      window["fmark"+i] = document.getElementById("formative"+i).value;
      window["fweight"+i] = document.getElementById("fweight"+i).value;
      
      window["fmark_field"+i] = document.getElementById("formative"+i);
      if (window["fmark"+i]*1.0 >window["fweight"+i])
      {  window["fmark_field"+i].style.color="red";}
      else
      {  window["fmark_field"+i].style.color="black";}
    }
      
    var finalscore = document.getElementById("grade_finalscore");
    var setgrade = document.getElementById("grade_grading_id");
    var marks70 = document.getElementById("grade_marks_70");
    var exam1marks_field = document.getElementById("grade_exam1marks");
    
    if (exam1marks > fullmarks)
    {  exam1marks_field.style.color="red";}
    else
    {  exam1marks_field.style.color="black";}
    
    totalformative = 0
    for (var i=0;i<formativecount;i++)
    {
      totalformative = totalformative+(window["fmark"+i]*1)
    }
      
    caplusmse = (totalformative*1);
    
    if ((programme=="Radiografi") || (programme=="Jurupulih Perubatan Cara Kerja"))
    {
      summative = (exam1marks*1)*(examweight*1)/100;
    }
    else
    {
      if (fullmarks==examweight)
      { summative=exam1marks*1; }
      else
      { 
        /*summative = (exam1marks*1)/fullmarks*(examweight*1);*/
        
        if (fullmarks==0)
        {  summative=0; }
        else
        {  summative = (exam1marks*1)/fullmarks*(examweight*1); }
      }
    }
    forgrade = caplusmse+summative;
    finalscore.value = caplusmse+summative;
    
    if (totalsummative2==0.0)
    {  marks70.value = summative;}
    else
    {  marks70.value = totalsummative2;}
    
    if (summative > examweight)
    {  marks70.style.color="red";}
    else
    {  marks70.style.color="black";}

    if (caplusmse+summative > 100)
    {  finalscore.style.color="red";}
    else
    {  finalscore.style.color="black";}

    if ((caplusmse+summative) > 79)
    {
      setgrade.value = 1;
    }
    else if ((caplusmse+summative) > 74)
    {
      setgrade.value = 2;
     }
    else if ((caplusmse+summative) > 69)
    {
      setgrade.value = 3;
    }
    else if ((caplusmse+summative) > 64)
    {
       setgrade.value = 4;
     }
    else if ((caplusmse+summative) > 59)
    {
      setgrade.value = 5;
    }
    else if ((caplusmse+summative) > 54)
    {
      setgrade.value = 6;
    }
    else if ((caplusmse+summative) > 49)
    {
      setgrade.value = 7;
     }
    else if ((caplusmse+summative) > 44)
    {
      setgrade.value = 8;
     }
    else if ((caplusmse+summative) > 39)
    {
      setgrade.value = 9;
     }
    else if ((caplusmse+summative) > 34)
    {
      setgrade.value = 10;
     }
    else if ((caplusmse+summative) > 0)
    {
       setgrade.value = 11;
    }
  });  

});
/  $("#grade_exam1marks").keyup(function() {  
//above - latest (formative marks requested to be entered within weightage range)
//below - previous
//caplusmse = (totalformative*1)*(100-examweight)/100;
//totalformative = totalformative+(window["fmark"+i]*1)*((window["fweight"+i]*1)/100)
