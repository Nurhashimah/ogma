- model_class = ExamTemplate
.page-header
  %h1= t('exam.exam_template.title')#, :default => model_class.model_name.human.pluralize

.navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
  %ul.nav.navbar-nav
    - permitted_to? :create, :exam_exam_templates do
      %li= link_to content_tag(:li, fa_icon("asterisk", text: (t 'actions.new'))), new_exam_exam_template_path
  %ul.nav.navbar-nav.navbar-right
    %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: 'index_search_bar'

.row
  .col-md-12
    .alert.alert-warning
      %strong= t 'exam.exams.notes'
      %ol
        %li
          =t('exam.exams.marks_each')

.row
  %table.table-striped.table-hover.ogma
    %thead
      %tr
        /%th= sort_link(@search, :studentevaluate_name_cont, (t 'exam.exam_template.student_id'))
        %th{rowspan: 2}= sort_link(@search, :name, (t 'exam.exam_template.name'))
        %th{rowspan: 2}= sort_link(@search, :created_by, (t 'exam.exam_template.created_by'))
        %th.centre{colspan: 10}= (t 'exam.exam_template.count')+"  /  "+(t 'exam.exam_template.weight')
      %tr
        - DropDown::QTYPE.each do |channel|
          %th.centre=channel[1]

    %tbody
      = render "search_bar"
      - @exam_templates.each do |exam_template|
        %tr
          %td= link_to exam_template.name, exam_exam_template_path(exam_template)
          %td=h exam_template.creator.userable.name
          - DropDown::QTYPE.each do |channel|
            - var_channel = channel[1].parameterize.downcase.underscore
            - @weight = (exam_template.question_count[var_channel.to_s]['weight']rescue nil)
            %td.centre
              = @counter = (exam_template.question_count[var_channel.to_s]['count'] rescue nil)
              =  " / " unless @weight.blank?
              = @weight
              = "%" unless @weight.blank?


    .right{style:"padding:0 30px; margin:0;"}= paginate @exam_templates, :theme => 'twitter-bootstrap-3'
