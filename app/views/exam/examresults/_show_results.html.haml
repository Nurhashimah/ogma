- model_class = Exam
.col-md-11
  %hr
  %table.table.table-bordered
    %head
      %tr
        %th{rowspan: 2} &nbsp;
        %th{rowspan: 2}=t('student.name')
        %th{rowspan: 2}=t('student.students.matrixno')
        %th{rowspan: 2}=t('student.icno')
        - @subjects = Examresult.get_subjects(@examresult.programme_id,@examresult.semester)
        - for subject in @subjects
          %th.centre{colspan: 2}=h subject.code
        %th.centre{rowspan: 2}= t 'examresult.total' 
        %th.centre{rowspan: 2} PNGS17
        %th.centre{rowspan: 2} PNGK
        %th.centre{rowspan: 2} Status
        %th.centre{rowspan: 2}= t 'examresult.remark'
      %tr
        - 0.upto(@subjects.count-1) do |count|
          %th=t('grade.grade')
          %th NG
      - nos=0
      - for examresultline in @examresult.resultlines
        %tr
          %td=nos+=1
          %td.left=h examresultline.student.name 
          %td.left=h examresultline.student.matrixno
          %td.left=h examresultline.student.icno
          - for subject in @subjects
            - @student_grade = Grade.where('student_id=? and subject_id=?',examresultline.student.id,subject.id).first
            - @student_finale = Grade.where('student_id=? and subject_id=?',examresultline.student.id,subject.id).first
            %td.center
              - unless @student_grade.nil? || @student_grade.blank?
                =@student_grade.set_gred
            %td.center
              - unless @student_finale.nil? || @student_finale.blank? 
                =number_with_precision(@student_finale.set_NG.to_f,:precision=>2)
              - else 
                = number_with_precision(0.00,:precision=>2) 
          %td=h number_with_precision(examresultline.total,:precision=>2)
          %td=h number_with_precision(examresultline.pngs17,:precision=>2)
          %td=h number_with_precision(examresultline.pngk, :precision=>2)
          %td=h examresultline.render_status
          %td=h examresultline.remark