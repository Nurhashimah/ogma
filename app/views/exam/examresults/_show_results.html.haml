- model_class = Exam
.col-md-11
  %hr
  %table.table.table-bordered
    %head
      %tr
        %th{rowspan: 2} &nbsp;
        %th{rowspan: 2}=t('student.name')
        %th{rowspan: 2}=t('student.students.matrixno')
        %th{rowspan: 2}=t('student.icno')
        /- @subjects = Examresult.get_subjects(@examresult.programme_id,@examresult.semester)
        - @subjects = @examresult.retrieve_subject
        - for subject in @subjects
          %th.centre{colspan: 2}=h subject.code
        %th.centre{rowspan: 2}= t 'examresult.total' 
        %th.centre{rowspan: 2} PNGS17
        %th.centre{rowspan: 2} PNGK
        %th.centre{rowspan: 2} Status
        %th.centre{rowspan: 2}= t 'examresult.remark'
      %tr
        - 0.upto(@subjects.count-1) do |count|
          %th=t('exam.grade.grading_id')
          %th NG
      - nos=0
      - for examresultline in @examresult.resultlines
        %tr
          %td=nos+=1
          %td.left=h examresultline.student.name 
          %td.left=h examresultline.student.matrixno
          %td.left=h examresultline.student.icno
          /- for subject in @subjects
          /  - @student_grade = Grade.where('student_id=? and subject_id=?',examresultline.student.id,subject.id).first
          /  - @student_finale = Grade.where('student_id=? and subject_id=?',examresultline.student.id,subject.id).first
          /  %td.center
          /    - unless @student_grade.nil? || @student_grade.blank?
          /      =@student_grade.set_gred
          /  %td.center
          /    - unless @student_finale.nil? || @student_finale.blank? 
          /      =number_with_precision(@student_finale.set_NG.to_f,:precision=>2)
          /    - else 
          /      = number_with_precision(0.00,:precision=>2) 
          //
          - for subject in @subjects
            - @grade_student=Grade.where(subject_id: subject.id).where(student_id: examresultline.student_id)
            - english_subjects=['PTEN', 'NELA', 'NELB', 'NELC', 'MAPE', 'XBRE', 'OTEL'] 
            - if @grade_student.count > 0
              - if english_subjects.include?(subject.code[0,4])==false
                - @gradeit=Grade.where('student_id=? and subject_id=?', examresultline.student_id,subject.id).first.set_gred 
                - @finale=Grade.where('student_id=? and subject_id=?', examresultline.student_id,subject.id).first.set_NG.to_f 
            - else
              - if english_subjects.include?(subject.code[0,4])==false
                - @gradeit= ""
                - @finale= "0.00"
            - if english_subjects.include?(subject.code[0,4])
              /Lulus OR Gagal 
              %td.centre{colspan: 2}=examresultline.render_status_contra
            - else
              %td.centre=@gradeit
              %td.centre=@finale
          //
          %td=h number_with_precision(examresultline.total,:precision=>2)
          %td=h number_with_precision(examresultline.pngs17,:precision=>2)
          %td=h number_with_precision(examresultline.pngk, :precision=>2)
          - fisioterapi=Programme.where(course_type: 'Diploma').where('name ILIKE (?)', '%Fisioterapi%').first.id
          - perubatan=Programme.where(course_type: 'Diploma').where('name ILIKE (?)', 'Penolong Pegawai Perubatan').first.id
          - if [fisioterapi, perubatan].include?(examresultline.examresult.programme_id)
            - status_viewing=examresultline.render_status_contra
          - else
            - status_viewing=examresultline.render_status
          %td=status_viewing
          %td=h examresultline.remark