- model_class = Exam
.col-md-11
  %hr
  %table.table.table-bordered
    %head
      %tr
        %th{rowspan: 2} &nbsp;
        %th{rowspan: 2}=t('student.name')
        %th{rowspan: 2}=t('student.students.matrixno')
        %th{rowspan: 2}=t('student.icno')
        /- @subjects = Examresult.get_subjects(@examresult.programme_id,@examresult.semester)
        - @subjects = @examresult.retrieve_subject
        - for subject in @subjects
          %th.centre{colspan: 2}=h subject.code
        %th.centre{rowspan: 2}= t 'exam.examresult.total_grade_point2' 
        %th.centre{rowspan: 2}= t 'exam.examresult.gpa2'
        %th.centre{rowspan: 2}= t 'exam.examresult.cgpa2'
        %th.centre{rowspan: 2} Status
        %th.centre{rowspan: 2}= t 'exam.examresult.remark'
      %tr
        - 0.upto(@subjects.count-1) do |count|
          %th=t('exam.grade.grading_id')
          %th NG
      - nos=0
      - for examresultline in @examresult.resultlines
        %tr
          %td=nos+=1
          %td.left=h examresultline.student.name 
          %td.left=h examresultline.student.matrixno
          %td.left=h examresultline.student.icno
          - credit2_all=[]
          - final2_all=[]
          - english_subjects=['PTEN', 'NELA', 'NELB', 'NELC', 'MAPE', 'XBRE', 'OTEL'] 
          - for subject in @subjects
            - @grade_student=Grade.where(subject_id: subject.id).where(student_id: examresultline.student_id)
            - @student_finale=Grade.where('student_id=? and subject_id=?', examresultline.student_id,subject.id).first
            //--------------
            - if subject.code.size >9
              - unless english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3))
                - credit2_all << subject.code[10,1].to_i 
            - elsif subject.code.size < 10
              - unless english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3)) 
                - credit2_all << subject.code[-1,1].to_i
            - unless english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3))
              - unless @student_finale.nil? || @student_finale.blank? 
                - final2_all << @student_finale.set_NG.to_f
              - else
                - final2_all << 0.00
            //-------------
            - if @grade_student.count > 0
              - if english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3))
                %td.centre{colspan: 2}=examresultline.render_status_contra
              - else
                %td.centre=@grade_student.first.render_grading.split("-")[2] 
                %td.centre=@grade_student.first.set_NG.to_f 
            - else
              - if english_subjects.include?(subject.code[0,4]) || (subject.code.strip.size < 10 && (subject.code.strip[-2,1].to_i==2 || subject.code.strip[-2,1].to_i==3))
                %td.centre{colspan: 2}= t 'exam.examresult.failed'
              - else
                %td.centre &nbsp;
                %td.centre 0.00
      
          - total_point=number_with_precision(Examresult.total(final2_all, credit2_all), precision: 2)
          - if final2_all.count > 0 && credit2_all.count > 0
            - gpa=number_with_precision((Examresult.total(final2_all, credit2_all) / credit2_all.sum), precision: 2)
          - else
            - gpa=0.00
          - semno=@examresult.semester.to_i-1
          - programmeid=@examresult.programme_id
          - examresult_ids=Examresult.where(programme_id: programmeid).pluck(:id)
          - @resultlines = Resultline.where(examresult_id: examresult_ids, student_id: examresultline.student_id).order(created_at: :asc)
          - cgpa=number_with_precision(Examresult.cgpa_per_sem(@resultlines, semno), precision: 2) if @resultlines.count-1==semno
            
          %td=total_point
          %td=gpa
          %td=cgpa if cgpa
          
          - fisioterapi=Programme.where(course_type: 'Diploma').where('name ILIKE (?)', '%Fisioterapi%').first.id
          - perubatan=Programme.where(course_type: 'Diploma').where('name ILIKE (?)', 'Penolong Pegawai Perubatan').first.id
          - if [fisioterapi, perubatan].include?(examresultline.examresult.programme_id)
            - status_viewing=examresultline.render_status_contra
          - else
            - status_viewing=examresultline.render_status
          %td=status_viewing
          %td=h examresultline.remark