.col-md-offset-2
  .form-group
    .col-sm-2.control-label
      = f.label :creator_id
    .col-md-6
      = f.collection_select :creator_id, Staff.where('id IN (?)', @examquestion.question_creator(current_user)).order('name ASC'), :id, :name, {:include_blank => (t 'select'), :selected =>@creator, :prompt => t('helpers.prompt.select_creator')}, {class: 'selectpicker mandatory', "data-width"=>"300px"}

  .form-group
    .col-sm-2.control-label
      = f.label :programme_id
    .col-md-6
      = f.collection_select :programme_id, @programme_list, :id, :programme_list, {:selected => @preselect_prog, :include_blank => (t 'select')}, {class: 'selectpicker mandatory', "data-width"=>"400px"}

  .form-group
    .col-sm-2.control-label
      = f.label :subject_id
    .col-md-5
      - unless @preselect_prog.nil?
        /lecturer
        = f.select :subject_id, grouped_options_for_select(Programme.subject_groupbyoneprogramme(@preselect_prog), @examquestion.subject_id), {:include_blank => (t 'select'), :selected => @examquestion.subject_id.to_i}, {class: 'form-control mandatory'}
      - else
        /admin
        = f.select :subject_id, grouped_options_for_select(Programme.subject_groupbyprogramme, @examquestion.subject_id), {:include_blank => (t 'select')}, {class: 'form-control mandatory'}

  .form-group
    .col-sm-2.control-label
      = f.label :topic_id
    .col-md-5
      - unless @preselect_prog.nil?
        /lecturer
        = f.select :topic_id, grouped_options_for_select(Programme.topic_groupbysubject_oneprogramme(@preselect_prog), @examquestion.topic_id),{:include_blank => (t 'select')}, {class: 'form-control mandatory'}
      - else
        /admin
        = f.select :topic_id, grouped_options_for_select(Programme.topic_groupbysubject, @examquestion.topic_id),{:include_blank => (t 'select')}, {class: 'form-control mandatory'}

  .form-group
    .col-sm-2.control-label
      =f.label :createdt
    .col-md-2
      - if @examquestion.id.nil? || @examquestion.id.blank?
        = f.text_field :createdt, class: 'date_picker_reverse form-control mandatory'
      - else
        = f.text_field :createdt, class: 'form-control', readonly: 'readonly'

  /= render :partial => 'status', :locals => {:f => f} if @examquestion.qstatus != "Approved" && (@examquestion.qstatus == "New" && !@examquestion.id)
