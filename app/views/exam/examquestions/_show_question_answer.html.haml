- model_class = Examquestion
.col-md-8.col-md-offset-2
  %dl.dl-horizontal

    %dt
      - if @examquestion.questiontype=="SEQ" 
        = t 'exam.examquestion.question2' 
      - else
        = t 'exam.examquestion.question' 
    %dd
      %table
        %tr
          %td
            =h simple_format(@examquestion.question)

            /MCQ Question:answerchoices & examanswers - start
            - if @examquestion.questiontype=="MCQ"
              //if not exist at all OR exist but 1st item has no value-start (upto answerchoice.description)
              - if @examquestion.answerchoices.count != 0 && @examquestion.answerchoices[0].description!=""
                - for answerchoice in @examquestion.answerchoices.sort_by{|x|x.item}
                  = answerchoice.item
                  = answerchoice.description
                  %br
                %br
              - for examanswer in @examquestion.examanswers.sort_by{|y|y.item}
                = examanswer.item
                = examanswer.answer_desc
                %br
            /MCQ Question:answerchoices & examanswers - end

            /SEQ Question:shortessay (subquestions, submarks, subanswer) - start
            - if @examquestion.questiontype=="SEQ"
              - for shortessay in @examquestion.shortessays.sort_by{|x|x.item}	
                %br
                %u= (t 'exam.examquestion.subquestion')+" "+shortessay.item+" :"
                %br
                =h shortessay.subquestion+" ("+ shortessay.submark.to_s+" "+(t 'exam.examquestion.marks')+")"
                %br
                %u= (t 'exam.examquestion.keyword')+" "+shortessay.item+" :"
                %br
                =h shortessay.keyword
                %br
                %u= (t 'exam.examquestion.subanswer')+" "+shortessay.item+" :"
                %br
                =h simple_format(shortessay.subanswer)
            /SEQ Question:shortessay (subquestions, submarks, subanswer) - end

            /TRUEFALSE Question:boolean choices & boolean answers - start
            - if @examquestion.questiontype=="TRUEFALSE"
              %u= t 'exam.examquestion.booleanchoices'
              %br
              - for booleanchoice in @examquestion.booleanchoices.sort_by{|x|x.item}
                = booleanchoice.item+". "
                = booleanchoice.description
                %br
              %u= t 'exam.examquestion.booleananswers'
              %br
              - for booleananswer in @examquestion.booleananswers.sort_by{|y|y.item}
                = booleananswer.item+". "
                = (t 'exam.examquestion.true1') if booleananswer.answer==true 
                = (t 'exam.examquestion.false1') if booleananswer.answer==false
                %br
            /TRUEFALSE Question:boolean choices & boolean answers - end

    /MCQ final ANSWER
    - if @examquestion.questiontype=="MCQ"
      %dt=t 'exam.examquestion.answermcq'
      %dd=h @examquestion.answer.to_s
	
    /answer field for other than MCQ & SEQ 
    - if !(@examquestion.questiontype=="MCQ" || @examquestion.questiontype=="SEQ")
      %dt=t 'exam.examquestion.answer' , :default => model_class.human_attribute_name(:answer) + ":"
      %dd=h @examquestion.answer  

    /main2 - for all type of question	
    %dt
      - if @examquestion.questiontype=="SEQ" 
        = t 'exam.examquestion.marks2' 
      - else
        = t 'exam.examquestion.marks' 
    %dd=h @examquestion.marks

    //keyword field for other than MCQ & True/False
    - if !(@examquestion.questiontype=="MCQ" || @examquestion.questiontype=="TRUEFALSE")
      %dt=t 'exam.examquestion.qkeyword' , :default => model_class.human_attribute_name(:qkeyword) + ":"
      %dd=h @examquestion.qkeyword

    %BR