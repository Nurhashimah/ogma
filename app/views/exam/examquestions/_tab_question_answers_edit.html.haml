.col-md-offset-2
  .form-group
    .col-sm-2.control-label
      = f.label :questiontype
    .col-md-4
      = f.select :questiontype, DropDown::QTYPE, {:prompt=> t('helpers.prompt.select_questiontype')}, {class: 'selectpicker mandatory'}

  //main - for all type of question
  .p#main_question.box
    - if @examquestion.diagram.exists? then
      .form-group
        .col-sm-2.control-label
          = f.label (t 'exam.examquestion.current_diagram')
        .col-md-6
          = image_tag @examquestion.diagram.url,:style => "border: solid 1px;"
          %br
          %b= t'exam.examquestion.uploaded_file'
          = @examquestion.diagram_file_name
    .form-group
      /preview diagram before upload
      .col-sm-2.control-label
        %b= t 'exam.examquestion.new_diagram'
      .col-md-6
        %img#uploadPreview{:alt => (t 'exam.examquestion.browse_preview'), :style=>"width: 100px; height:100px;border: solid 1px; padding: 5px;"}/
        /%img#uploadPreview{:src => "http://placekitten.com/200/300", :style=>"width: 100px; height:100px;"}/
    .form-group
      .col-sm-2.control-label
        = f.label :diagram
      .col-md-6
        = f.file_field :diagram, class: 'form-control', :onchange=>"PreviewImage();"
    .form-group
      .col-sm-2.control-label
        = f.label :diagram_caption
      .col-md-6
        = f.text_field :diagram_caption, class: 'form-control'
    .form-group
      .col-sm-2.control-label
        = f.label :question
      .col-md-6
        /= f.text_area :question, :id => 'myNicEditor', :style=>"width: 545px;"
        /= f.cktext_area :question, :style=>"width: 545px;"
        = f.text_area :question, :id => 'myfield', :style=>"width: 545px;"

  .p#MCQ.box
    /START of MCQ section ----------------------------------------
    - @type="1"
    .form-group
      .col-sm-2.control-label
        = f.label :answermcq
      .col-md-6
        .span_activate{:style => "display:block;"}
          = render :partial => 'answerchoice_fields', :locals => {:f => f,:type=>@type}
        .span_div{:style => "width:335px;text-align:right;"}
          = f.check_box :activate, :id => 'examquestion_activate', :checked=>true
          Activate

        // 1 for mcq & 2 for true/false, to recheck '2 for true/false' may no longer used?
        = render :partial => 'examanswer_fields', :locals => {:f => f,:type=>@type}

    .form-group
      .col-sm-2.control-label
      .col-md-3
        //answer field, table : examquestions - start
        - ans = ['A','B','C','D']
        - @mcqanswer = @examquestion.answer.to_s if !@examquestion.id.nil?
        = f.select :answermcq, ans, {:include_blank=> t('helpers.prompt.select_mcq_answer'),:selected=> @mcqanswer}, {class: 'selectpicker'}
    /END of MCQ section ----------------------------------------

  .p#SEQ.box
    /START of SEQ section ----------------------------------------
    - @count=0
    .form-group
      .col-sm-2.control-label
        = f.label :subquestions
      .col-md-10
        = f.fields_for :shortessays do |builder|
          = render 'shortessay_fields', :f => builder,:locals=> { :index => @count}
          - @count+=1
        /= link_to_add_fields image_tag("add.png", :border => 0, :title => 'Add Q'), f, :shortessays  - Add
    /END of SEQ section ----------------------------------------


  .p#MEQ.box
    /MEQ section -- no specific requirement at this moment

  .p#ACQ.box
    /ACQ section -- no specific requirement at this moment

  .p#OSCI.box
    /OSCI section -- no specific requirement at this moment

  .p#OSCII.box
    /OSCII section -- no specific requirement at this moment

  .p#OSCE.box
    /OSCE section -- no specific requirement at this moment

  .p#OSPE.box
    /OSPE section -- no specific requirement at this moment

  .p#VIVA.box
    /VIVA section -- no specific requirement at this moment

  .P#TRUEFALSE.box
    /START of TRUE FALSE section ----------------------------------------
    .form-group
      .col-sm-2.control-label
        %b= t 'exam.examquestion.booleanchoices'
      .col-md-6
        = render :partial => 'booleanchoice_fields', :locals => {:f => f}
    .form-group
      .col-sm-2.control-label
        %b= t 'exam.examquestion.booleananswers'
      .col-md-6
        = render :partial => 'booleananswer_fields', :locals => {:f => f}
    /END of TRUE FALSE section ----------------------------------------

  /answer field for other than MCQ & SEQ (pls note TRUE FALSE requires this field)
  .p#others_answer.box
    .form-group
      .col-sm-2.control-label
        = f.label :answer
      .col-md-6
        = f.text_field :answer, class: 'form-control'

  /main_question2 - 'marks' label for all type of question
  /main_question3 - 'total marks' label for SEQ only
  .form-group
    .col-sm-2.control-label
      .p#main_question2.box
        = f.label :marks
      .p#main_question3.box
        = f.label (t 'exam.examquestion.marks2')
    .col-md-2
      = f.text_field :marks, class: 'form-control mandatory'

  /keyword field for other than MCQ & True/False
  .p#others_keyword.box
    .form-group
      .col-sm-2.control-label
        = f.label :qkeyword
      .col-md-6
        /= f.text_field :qkeyword, class: 'form-control'
        = f.text_area :qkeyword, :size => "60x3",  class: 'form-control'

  /= render :partial => 'status', :locals => {:f => f} if @examquestion.qstatus != "Approved"

:javascript
  //NicEditor
  //<![CDATA[
    bkLib.onDomLoaded(function() {
        nicEditors.editors.push(new nicEditor({fullPanel: true}).panelInstance(document.getElementById('myNicEditor')));
        nicEditors.editors.push(new nicEditor({fullPanel: true}).panelInstance(document.getElementById('examquestion_shortessays_attributes_0_subanswer')));
        nicEditors.editors.push(new nicEditor({fullPanel: true}).panelInstance(document.getElementById('examquestion_shortessays_attributes_1_subanswer')));
        nicEditors.editors.push(new nicEditor({fullPanel: true}).panelInstance(document.getElementById('examquestion_shortessays_attributes_2_subanswer')));
    });
  //]]>
  
  //CKEditor 8Feb2017 onwards - customised (some toolbars not required as this form is pre-formated with: image uploader(with preview) +question must adhere with certain rules like image position, answers display etc (in exampaper PDF).
  //Solution to - unsupported clipboard HTML format copied from Ms Word (Win 32)
  CKEDITOR.replace( 'myfield', {
    toolbarGroups: [
      { name: 'document', groups: [ 'mode', 'document', 'doctools' ] },
      { name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ] },
      { name: 'styles', groups: [ 'styles' ] },
      { name: 'colors', groups: [ 'colors' ] },
      { name: 'document', groups: [ 'mode', 'document', 'doctools' ] },
      { name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi', 'paragraph' ] },
      { name: 'editing', groups: [ 'find', 'selection', 'spellchecker', 'editing' ] },
      { name: 'clipboard', groups: [ 'clipboard', 'undo' ] },
      { name: 'forms', groups: [ 'forms' ] },
      { name: 'links', groups: [ 'links' ] },
      { name: 'insert', groups: [ 'insert' ] },
      { name: 'tools', groups: [ 'tools' ] },
      { name: 'others', groups: [ 'others' ] },
      { name: 'about', groups: [ 'about' ] }
    ],

    removeButtons: 'Save,Templates,Scayt,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,BulletedList,NumberedList,Indent,Outdent,CreateDiv,BGColor,Styles,Format,Font,Blockquote,Language,BidiLtr,BidiRtl,Anchor,Unlink,Link,Image,Flash,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Preview,NewPage,Print,Table'
  });
  
  

  
  
  
  

:javascript
  function PreviewImage() {
    var oFReader = new FileReader();
    oFReader.readAsDataURL(document.getElementById("examquestion_diagram").files[0]);

    oFReader.onload = function(oFREvent) {
      document.getElementById("uploadPreview").src = oFREvent.target.result;
    };
  };
  

  