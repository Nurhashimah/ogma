- model_class = Exammark
.col-md-8.col-md-offset-1
  %dl.dl-horizontal

    %dt= t 'exam.exammark.marks' , :default => model_class.human_attribute_name(:marks) + ":"
    %dd
      - if @exammark.exampaper.klass_id == 0
        (number_with_precision(@exammark.total_marks,2).to_s+t('asset.loan.separator_slash')+ number_with_precision(@exammark.exampaper.examtemplates.map(&:total_marks).inject{|sum, x|sum+x},2) )
      - else
        /################################################
        %table.table
          - @examquestions = @exammark.exampaper.examquestions
          %thead
            %tr
              %th=t 'exam.examquestion.questiontype'
              %th No
              %th=t 'exam.exammark.question'
              %th=t 'exam.exammark.mark'
          %tbody
            - if @exammark
              - @marks_for_questions = Mark.where(exammark_id: @exammark.id).sort_by{|x|x.created_at}
 
              /start-display MCQ questions details
              - if @examquestions.mcqq.count > 0
                = render 'show_mcq', :task=>1

              /start-display MEQ questions details
              - count2 = 0
              - if @examquestions.meqq.count > 0 
                - 0.upto(@examquestions.meqq.count-1) do |count|
                  = render 'show_meq', :count=>count, :count2=>count2, :task=>1
                  - count2+=1
                
              /start-display SEQ questions details
              - if @examquestions.seqq.count > 0 
                - 0.upto(@examquestions.seqq.count-1) do |count| 
                  = render 'show_seq', :count=>count, :count2=>count2, :task=>1
                  - count2+=1 
                
              /start-display ACQ questions details
              - if @examquestions.acqq.count > 0 
                - 0.upto(@examquestions.acqq.count-1) do |count|
                  = render 'show_acq', :count=>count, :count2=>count2, :task=>1
                  - count2+=1 
                
              /start-display OSCI questions details
              - if @examquestions.osci2q.count > 0 
                - 0.upto(@examquestions.osci2q.count-1) do |count|
                  = render 'show_osci', :count=>count, :count2=>count2, :task=>1
                  - count2+=1 
                
              /start-display OSCII questions details
              - if @examquestions.osci3q.count > 0
                - 0.upto(@examquestions.osci3q.count-1) do |count|
                  = render 'show_oscii', :count=>count, :count2=>count2, :task=>1
                  - count2+=1

              /start-display OSCE questions details
              - if @examquestions.osceq.count > 0
                - 0.upto(@examquestions.osceq.count-1) do |count| 
                  = render 'show_osce', :count=>count, :count2=>count2, :task=>1
                  - count2+=1

              /start-display OSPE questions details
              - if @examquestions.ospeq.count > 0
                - 0.upto(@examquestions.ospeq.count-1) do |count|
                  = render 'show_ospe', :count=>count, :count2=>count2, :task=>1
                  - count2+=1

              /start-display VIVA questions details
              - if @examquestions.vivaq.count > 0 
                - 0.upto(@examquestions.vivaq.count-1) do |count|
                  = render 'show_viva', :count=>count, :count2=>count2, :task=>1
                  - count2+=1
                
              /start-display TRUEFALSE questions details
              - if @examquestions.truefalseq.count > 0 
                - 0.upto(@examquestions.truefalseq.count-1) do |count| 
                  = render 'show_truefalse', :count=>count, :count2=>count2, :task=>1
                  - count2+=1
                
              %tr
                %td &nbsp;
                %td &nbsp;
                %td
                  %b=t 'exam.exammark.total_mcq'
                %td
                  = number_with_precision(@exammark.total_marks, precision: 2)
                %td
                  \/ 
                  =number_with_precision(@examquestions.all.map(&:marks).inject{|sum, x|sum+x}, precision: 2)

        /################################################
