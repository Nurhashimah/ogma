/.row
/  .col-md-offset-2
/    .form-group
/      .col-sm-2.control-label
/        %b= t 'exam.exammark.title'
/      .col-md-6
/        = text_field_tag "exammark_ids[]", 7, class: 'form-control'
/.row
/  .col-md-offset-2
/    .form-group
/      .col-sm-2.control-label
/        %b= t 'exam.exammark.title'
/      .col-md-6
/        = text_field_tag "exammark_ids[]", 7, class: 'form-control'
           
/retrieve data first
- @examid = @exammarks[0].exam_id 
- @istemplate = Exam.find(@examid).klass_id
- if @istemplate == 0
  - @examtemplates = Exam.find(@examid).examtemplates
  - qty_ary = @examtemplates.map(&:quantity)
  - @questioncount = qty_ary.inject{|sum,x|sum+x}
  - @mcqcount = @examtemplates.mcqq[0].quantity 
  - @meqcount = @examtemplates.meqq[0].quantity if @examtemplates.map(&:questiontype).include?("MEQ")
  - @seqcount = @examtemplates.seqq[0].quantity if @examtemplates.map(&:questiontype).include?("SEQ")
  - @acqcount = @examtemplates.acqq[0].quantity if @examtemplates.map(&:questiontype).include?("ACQ")
  - @oscicount = @examtemplates.osci2q[0].quantity if @examtemplates.map(&:questiontype).include?("OSCI") 
  - @osciicount = @examtemplates.osci3q[0].quantity if @examtemplates.map(&:questiontype).include?("OSCII")
  - @oscecount = @examtemplates.osceq[0].quantity if @examtemplates.map(&:questiontype).include?("OSCE")
  - @ospecount = @examtemplates.ospeq[0].quantity if @examtemplates.map(&:questiontype).include?("OSPE")
  - @vivacount = @examtemplates.vivaq[0].quantity if @examtemplates.map(&:questiontype).include?("VIVA") 
  - @truefalsecount = @examtemplates.truefalseq[0].quantity if @examtemplates.map(&:questiontype).include?("TRUEFALSE") 
  - @allcount = @questioncount
- else 
  - @mcqcount = Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"MCQ", @examid).count
  - @meqcount = Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"MEQ", @examid).count
  - @seqcount= Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"SEQ", @examid).count
  - @acqcount= Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"ACQ", @examid).count
  - @oscicount= Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"OSCI", @examid).count
  - @osciicount= Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"OSCII", @examid).count
  - @oscecount= Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"OSCE", @examid).count
  - @ospecount= Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"OSPE", @examid).count
  - @vivacount= Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"VIVA", @examid).count
  - @truefalsecount= Examquestion.joins(:exams).where('questiontype=? and exam_id=?',"TRUEFALSE", @examid).count
  - @allcount = Examquestion.joins(:exams).where('exam_id=?',@examid).count

- @fullmarks = Exammark.fullmarks(@examid)
- @b_count=0
- @diff_total_mcq=0

.row
  %table.table
    %thead
      %tr
        %th No
        %th=t 'exam.exammark.student_id'
        %th=t 'student.icno'
        - if @exampaper_of_exammarks==1 
        - else
          %th Examination
        %th=t 'exam.exammark.total_mcq'
        - if @meqcount
          - 1.upto(@meqcount) do |count|
            %th 
              MEQ
              %br="Q-"+count.to_s
        - if @seqcount
          - 1.upto(@seqcount) do |count|
            %th 
              SEQ
              %br="Q-"+count.to_s
        - if @acqcount
          - 1.upto(@acqcount) do |count|
            %th 
              ACQ
              %br="Q-"+count.to_s
        - if @oscicount
          - 1.upto(@oscicount) do |count|
            %th 
              OSCI
              %br="Q-"+count.to_s
        - if @osciicount
          - 1.upto(@osciicount) do |count|
            %th 
              OSCII
              %br="Q-"+count.to_s
        - if @oscecount 
          - 1.upto(@oscecount) do |count|
            %th 
              OSCE
              %br="Q-"+count.to_s
        - if @ospecount 
          - 1.upto(@ospecount) do |count|
            %th 
              OSPE
              %br="Q-"+count.to_s
        - if @vivacount 
          - 1.upto(@vivacount) do |count|
            %th 
              VIVA
              %br="Q-"+count.to_s
        - if @truefalsecount
          - 1.upto(@truefalsecount) do |count|
            %th 
              =(t 'exam.exammark.true_false')+(t 'exam.exammark.true_false2')
              %br="Q-"+count.to_s
        %th 
          =t 'exam.exammark.total'
          %font{:style=>"size:-2;"}="("+(number_with_precision(@fullmarks, precision: 2)).to_s+")"
        %th
          =t 'exam.exammark.summative'
          (70%)

    %tbody
      - @exammarks.sort_by{|x|x.studentmark.name}.each_with_index do |exammark,no|
        = hidden_field_tag "exammark_ids[]", exammark.id
        %tr{:style=>"background-color:#EFE;"}
          %td=no+1
          %td=h exammark.studentmark.matrix_name   
          %td=h exammark.studentmark.icno
          - if @exampaper_of_exammarks==1
          - else
            %td=h exammark.exampaper.subject_date 
          - if @edit_type == "Edit Checked" || @edit_type.nil? 	
          - elsif @edit_type == "Edit by Subject" 
            = hidden_field_tag "exam_ids[]", @exam_id 
          %td
            = text_field_tag "total_mcqs[]", exammark.total_mcq.to_i,:id=>"total"+@b_count.to_s, :size=> 4,:class=>'j1' 
          - aaa=exammark.marks 
          - @a_count=0
          - aaa.sort_by{|x|x.created_at}.each_with_index do |aa, index|
            %td
              = text_field_tag "marks_attributes[#{index}][student_marks][]", number_with_precision(aa.student_mark,:precision=>2),:id=>"student_mark_"+"#{@b_count}"+"_"+@a_count.to_s,:class=>'j1', :size=> 4 
              - @a_count+=1

          %td{:style=>"background-color:#C3E9BF;"}= text_field_tag "total_marks_view[]", number_with_precision(exammark.total_marks,precision:2) ,:id=>"total_marks_view"+@b_count.to_s, :size=> 5, :readonly=>true

          %td{:style=>"background-color:#C3E9BF;"}= text_field_tag "total_summative[]", number_with_precision(exammark.total_marks/Exammark.fullmarks(@examid)*70, precision: 2) ,:id=>"total_summative"+@b_count.to_s, :size=> 5, :readonly=>true 
          - @b_count+=1