.row
  .col-md-10.col-md-offset-1
    / Nav tabs
    %ul.nav.nav-tabs
      %li.active= link_to ((t 'exam.exammark.exammark_details')),"#exammark_details", "data-toggle" => "tab"
      
    .tab-content{style:"padding-top:1em"}
      #exammark_details.tab-pane.active
        %br
        .col-md-offset-2 
          .form-group
            .col-sm-2.control-label
              =f.label t 'exam.exammark.exam_id', for: :exam_id
            .col-md-3
              = f.collection_select :exam_id, @exams_list, :id, :exam_name_subject_date,{:include_blank =>t('select')},{class: 'selectpicker', "data-width"=>'300px'} 
          .form-group
            .col-sm-2.control-label
              = f.label  t 'exam.exammark.student_id', for: :student_id
            .col-md-4
              = f.collection_select :student_id, @students_list, :id, :matrix_name, {:include_blank=>t('select'), :selected=>@exammark.student_id}, {class: 'selectpicker', "data-width"=>'300px'} 
              
          - if @exammark.new_record? == false 
            .form-group
              .col-sm-2.control-label
                = f.label t 'exam.exammark.marks', for: :marks
              .col-md-6
                - if @exammark.exampaper.klass_id == 0
                  (number_with_precision(@exammark.total_marks,2).to_s+t('asset.loan.separator_slash')+ number_with_precision(@exammark.exampaper.examtemplates.map(&:total_marks).inject{|sum, x|sum+x},2) )
                - else
                  /################################################
                  %table.table
                    - @examquestions = @exammark.exampaper.examquestions
                    %thead
                      %tr
                        %th=t 'exam.examquestion.questiontype'
                        %th No
                        %th=t 'exam.exammark.question'
                        %th=t 'exam.exammark.mark'
                    %tbody
                      - if @exammark
                        /retrieve existing marks first
                        - @current_mark = @exammark.total_mcq
                        - @marks_for_questions = Mark.where(exammark_id: @exammark.id).sort_by{|x|x.created_at} 

                        /start-display MCQ questions details
                        - if @examquestions.mcqq.count > 0
                          - if @exammark
                            - @exist_mark = @current_mark
                          - else
                            - @exist_mark = 0.00
                          = render 'show_mcq', :task=>2, :exist_mark=>@exist_mark
                          
                        /start-display MEQ questions details
                        - count2 = 0
                        - if @examquestions.meqq.count > 0
                          - 0.upto(@examquestions.meqq.count-1) do |count|
                            = render 'mark_exist', :count2=>count2
                            = render 'show_meq', :count=>count, :count2=>count2, :task=>2
                            - count2+=1

                        /start-display SEQ questions details
                        - if @examquestions.seqq.count > 0 
                          - 0.upto(@examquestions.seqq.count-1) do |count| 
                            = render 'mark_exist', :count2=>count2
                            = render 'show_seq', :count=>count, :count2=>count2, :task=>2
                            - count2+=1 

                        /start-display ACQ questions details
                        - if @examquestions.acqq.count > 0 
                          - 0.upto(@examquestions.acqq.count-1) do |count|
                            = render 'mark_exist', :count2=>count2
                            = render 'show_acq', :count=>count, :count2=>count2,  :task=>2
                            - count2+=1 
                        
                        /start-display OSCI questions details
                        - if @examquestions.osci2q.count > 0
                          - 0.upto(@examquestions.osci2q.count-1) do |count|
                            = render 'mark_exist', :count2=>count2
                            = render 'show_osci', :count=>count, :count2=>count2, :task=>2
                            - count2+=1 
                
                        /start-display OSCII questions details
                        - if @examquestions.osci3q.count > 0                 
                          - 0.upto(@examquestions.osci3q.count-1) do |count|
                            = render 'mark_exist', :count2=>count2
                            = render 'show_oscii', :count=>count, :count2=>count2, :task=>2
                            - count2+=1 
                  
                        /start-display OSCE questions details
                        - if @examquestions.osceq.count > 0
                          - 0.upto(@examquestions.osceq.count-1) do |count|
                            = render 'mark_exist', :count2=>count2
                            = render 'show_osce', :count=>count, :count2=>count2, :task=>2
                            - count2+=1
 
                        /start-display OSPE questions details
                        - if @examquestions.ospeq.count > 0
                          - 0.upto(@examquestions.ospeq.count-1) do |count|
                            = render 'mark_exist', :count2=>count2
                            = render 'show_ospe', :count=>count, :count2=>count2, :task=>2
                            - count2+=1
 
                        /start-display VIVA questions details
                        - if @examquestions.vivaq.count > 0 
                          - 0.upto(@examquestions.vivaq.count-1) do |count|
                            = render 'mark_exist', :count2=>count2
                            = render 'show_viva', :count=>count, :count2=>count2, :task=>2
                            - count2+=1

                        /start-display TRUEFALSE questions details
                        - if @examquestions.truefalseq.count > 0
                          - 0.upto(@examquestions.truefalseq.count-1) do |count| 
                            = render 'mark_exist', :count2=>count2
                            = render 'show_truefalse', :count=>count, :count2=>count2, :task=>2
                            - count2+=1
                      
                        
/for use in below JS
- if @exammark.new_record? == false 
  = hidden_field_tag "exammark[trial1]", nil, :class=>'k1'
  = hidden_field_tag "exammark[trial2]", @examquestions.mcqq.count, :class=>'k1'
  = hidden_field_tag "exammark[trial3]", @examquestions.count 
  - if @exammark
    =hidden_field_tag "exammark[total_mcq_in_exammark_single]", @exammark.total_mcq 
  
:javascript
$(document).ready(function(){
  $(".k1").keyup(function() {  
    var trial1 = $("#exammark_trial1").val();
    var trial2 = $("#exammark_trial2").val();
    var ansP2 = document.getElementById("exammark_trial3");
    ansP2.value = (trial1*1)+(trial2*1) 
  });
});
            
/display form for marks entering here (form display upon selection of exam (exam paper))