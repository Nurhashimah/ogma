- model_class = Ptschedule
.page-header
  %h1= t('staff.training.schedule.title')
= render 'shared/flashes'

.navbar.navbar-inverse{role: "navigation", style: "padding-right:40px;"}
  %ul.nav.navbar-nav
  %ul.nav.navbar-nav.navbar-right
    %li.toga= link_to content_tag(:li, fa_icon("search", text: (t 'actions.search'))), "#", class: "index_search_bar"
    %li= link_to content_tag(:li, fa_icon("print", text: (t 'actions.print'))), ptschedule_list_staff_training_ptschedules_path(params.merge(format: 'pdf'))
    
%table
  %body
    = render "index_search"   
- @ptschedules.each do |scheduled|
  .row.calendar_list
    .col-md-1.date
      %span.day= scheduled.start.try(:strftime, "%d")
      %span.month= scheduled.start.try(:strftime, "%b")
    .col-md-8.details
      %span.title= scheduled.course.try(:name)
      %br
      %p.description= scheduled.course.try(:description)
      %span.footer
        = scheduled.location
        = scheduled.course.provider.try(:name)
    .col-md-1.badges
      //TODO do a max min http://codepen.io/bamf/pen/gqzcI
      .badge
        =(t 'staff.training.schedule.max')
        = scheduled.max_participants
      %br
      .badge
        =(t 'staff.training.schedule.min')
        = scheduled.min_participants
    .col-md-1
      %td
        - if Ptdo.where(staff_id: current_user.userable_id).where(ptschedule_id: scheduled.id).count!=0
          =t('staff.training.schedule.applied_attended')
        - else
          = link_to (t 'staff.training.application_status.title_apply'), new_staff_training_ptdo_path(:ptschedule_id => scheduled) 
          - startdate="(#{scheduled.start.try(:strftime, '%d-%m-%Y')})"
          - if scheduled.start < Date.today
            .small.text-red=startdate
          - else
            .small.text-blue=startdate
    .col-md-1
      - permitted_to? :update, :staff_training_ptschedules do
        %td= link_to(t('staff.training.schedule.manage'), staff_training_ptschedule_path(scheduled))