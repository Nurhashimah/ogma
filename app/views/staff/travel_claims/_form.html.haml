.row
  .col-md-offset-1
    / Nav tabs
    %ul.nav.nav-tabs
      /- if @travel_claim.my_claim_status == "editing" || @travel_claim.my_claim_status == "returned" 
      %li.active= link_to (t 'staff.travel_claim.request_travel_log'),"#travel_request_log_edit", "data-toggle" => "tab"
      %li= link_to (t 'staff.travel_claim.claims_details'),"#claims_details_edit", "data-toggle" => "tab"
      %li=link_to (t 'staff.travel_claim.submission'),"#claims_submission", "data-toggle" => "tab"
      
    .tab-content{style:"padding-top:1em"}
      .col-md-6.col-md-offset-2
        .form-group
          .col-sm-2.control-label
            = f.label :claim_month
          .col-md-3
            - if @my_approved_unclaimed_requests != nil 
              = f.text_field :claim_month, class: 'monthyear_picker_reverse form-control mandatory' 
            - else
              = f.text_field :claim_month, class:  'form-control mandatory', readonly: 'readonly', value: @travel_claim.claim_month.strftime('%d-%m-%Y')
          .col-md-3
            - unless @my_approved_unclaimed_requests != nil 
              (
              = l(@travel_claim.claim_month, :format =>"%b %Y")
              )
      .col-md-6.col-md-offset-2
        .form-group
          .col-sm-2.control-label
            = f.label :staff_id
          .col-md-8
            - if @travel_claim.id && @travel_claim.staff_id
              = f.text_field :staff_name, value: @travel_claim.staff.staff_with_rank_position, readonly: 'readonly', class: 'form-control'
              = f.hidden_field :staff_id, value: @travel_claim.staff_id
            - else
              /RESTRICT - creation to owner
              - staff_list=Staff.where(id: current_user.userable_id)
              - selected=current_user.userable_id
              - if current_user.college.code=='amsas'
                = f.collection_select :staff_id, staff_list, :id,  :staff_with_rank_position_unit, {:include_blank =>t('helpers.prompt.select_staff'), :selected=>selected},{class: 'selectpicker', "data-width"=>'460px'} 
              - else
                = f.collection_select :staff_id, staff_list, :id,  :staff_name_with_position_grade_unit, {:include_blank =>t('helpers.prompt.select_staff'), :selected=>selected},{class: 'selectpicker', "data-width"=>'460px'} 
            
      - if !@travel_claim.new_record? && @travel_claim.travel_requests.count > 0 && @travel_claim.travel_requests.map(&:own_car).uniq.include?(true) 
        .col-md-6.col-md-offset-2    
          .form-group
            .col-sm-2.control-label
              = f.label  t('staff.transportclass_id')
            .col-md-6
              = @travel_claim.travel_requests.first.transport_class+'  ('+@travel_claim.staff.vehicles[0].reg_no+', '+@travel_claim.staff.vehicles[0].type_model+' cc)'
              
      #travel_request_log_edit.tab-pane.active
        - if @my_approved_unclaimed_requests != nil 
          /.col-md-10.col-md-offset-1
          /  %dl.dl-horizontal
          /  %hr
          = render 'tab_travel_request_log_edit', :f => f
        - else
          - for travel_request in @travel_claim.travel_requests
            = render 'tab_travel_request_log', :travel_request => travel_request 
        
      #claims_details_edit.tab-pane
        - @checklist = 0
        = render 'tab_claims_details_edit', :f => f
        
      #claims_submission.tab-pane
        = render 'tab_claims_submission', :f => f

%br

:javascript

//<![CDATA[
bkLib.onDomLoaded(function() {
  new nicEditor().panelInstance('myNicEditor3');
  new nicEditor().panelInstance('myNicEditor4');
});
//]]>

  function add_fields(link, association, content) {  
    var new_id = new Date().getTime();  
    var regexp = new RegExp("new_" + association, "g");  
    $(link).parent().before(content.replace(regexp, new_id));  
  }





/-  if @travel_claim.my_claim_status == "editing" || @travel_claim.my_claim_status == "returned" 
/      %h2
/        Edit travel claims for 
/        =h @travel_claim.claim_month.strftime("%B %Y") 
/      = render :partial => 'form2', :locals =nclaimed_requests != n> {:f => f}
/    -  if @travel_claim.approved_by == Login.current_login.staff_id 
/      %h2 
/        Approving travel claims for 
/        =h @travel_claim.staff.name
/        =h @travel_claim.claim_month.strftime("%B %Y") 
/        =render :partial => 'show_main', :locals => {:f => f} 
/        = render :partial => 'approval', :locals => {:f => f} 
/   - if @travel_claim.my_claim_status == "returned"
/      =h @travel_claim.notes 
