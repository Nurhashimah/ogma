.row.centre
  .panel.panel-info
    .panel-heading
      = link_to "Events", events_path
    .panel-body
      %div{:role => "tabpanel"}
        / Nav tabs
        %ul.nav.nav-tabs.nav-justified{:role => "tablist"}
          %li.active{:role => "presentation"}
            %a{"aria-controls" => "home", "data-toggle" => "tab", :href => "#recent", :role => "tab"} Recent
          %li{:role => "presentation"}
            %a{"aria-controls" => "profile", "data-toggle" => "tab", :href => "#today", :role => "tab"} Today
          %li{:role => "presentation"}
            %a{"aria-controls" => "messages", "data-toggle" => "tab", :href => "#upcoming", :role => "tab"} Upcoming
        / Tab panes
        .tab-content#event_bar
          #today.tab-pane.active{:role => "tabpanel"}
            - todays_events = Event.where("start_at <= ? AND end_at >= ?", Time.now,  Time.now).order(:end_at).reverse_order.limit(6)
            - if todays_events == []
              %h5.left No Events Today
            - else
              - todays_events.each do |e|
                %div{:class => "sidebar_event_item#{cycle("0", "1")}"}
                  %h5= link_to e.eventname, event_path(e)
                  %p= e.location
                  %p
                    =  e.start_at.try(:strftime, '%a, %e %b')
                    \ -
                    = e.end_at.try(:strftime, '%a, %e %b')


          #upcoming.tab-pane{:role => "tabpanel"}
            future...
          #recent.tab-pane{:role => "tabpanel"}
            past...



-#
  %h3 Today's Events
  %table.table.table-striped
    %tr
      %th Today's Events
    - todays_events = Event.where("start_at <= ? AND end_at >= ?", Time.now,  Time.now).order(:end_at).reverse_order.limit(6)
    - if todays_events == []
      %tr
        %td No Events Today
    - else
      - todays_events.each do |e|
        %tr
          %td
            %h5= link_to e.eventname, event_path(e)
            %p= e.location
            %p
              =  e.start_at.try(:strftime, '%a, %e %b')
              \ -
              = e.end_at.try(:strftime, '%a, %e %b')
