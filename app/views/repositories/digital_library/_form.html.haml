.row
  .col-md-offset-3

    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.document_type', for: :document_type
      .col-md-5
        =f.select :document_type, Repository.document, {include_blank: (t 'select')}, {class: 'selectpicker mandatory', "data-width"=>"auto"}

    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.document_subtype', for: :document_subtype
      .col-md-5
        =f.select :document_subtype, Repository.subdocument, {include_blank: (t 'select')}, {class: 'selectpicker mandatory', "data-width"=>"auto"}

    .form-group
      .col-sm-2.control-label
        =f.label t 'repositories.classification', for: :classification
      .col-md-5
        =f.select :classification, Repository.document_classification, {include_blank: (t 'select')}, {class: 'selectpicker', "data-width"=>"auto"}
        
    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.document_title', for: :title
      .col-md-5
        = f.text_field :title, class: 'form-control mandatory'

    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.vessel', for: :vessel
      .col-md-4
        =f.text_field :vessel, class: 'form-control mandatory', data: {autocomplete_source: Repository.digital_library.map(&:vessel).uniq.sort}
        
    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.refno', for: :refno
      .col-md-4
        = f.text_field :refno, class: 'form-control'

    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.publish_date', for: :publish_date
      .col-md-2
        = f.text_field :publish_date, class: 'form-control date_picker_reverse'        

    .form-group
      .col-sm-2.control-label
        = f.label (t 'repositories.total')
      .col-md-4
        .input-group
          .input-group-addon= t 'repositories.copies'
          = f.text_field :copies, class: 'form-control'
          .input-group-addon=t 'repositories.total_pages'
          = f.text_field :total_pages, class: 'form-control'     

    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.location', for: :location
      .col-md-4
        = f.text_field :location, class: 'form-control'        

    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.uploaded', for: :uploaded
      .col-md-5
        = f.file_field :uploaded, class: 'form-control'
        
        /NOTE - 20Apr2017 - workaround - to retrieve missing uploaded file when validation fails!  - start ####
        /when "cache for uploaded"(AttachmentUploader record) exist, although uploaded field contains no data...
        - if @aa
          /shall takes id of cache value, upon AttachmentUploader(AU) record creation
          = f.hidden_field :uploadcache, value: @aa
        - else
          /shall takes any value (null or with value of either NEW blank form(uploadcache=nil) or rendered NEW form (uploadcache=nil or uploadcache=id of AU record))
          = f.hidden_field :uploadcache
        /######## - workaround ends here - NOTE - to refer model/attachment_uploader.rb & repository.rb, plus repositories_controller.rb 
        
        .small 
          - if @repository.uploaded.present?
            = (t 'repositories.current_file')+": "+@repository.uploaded_file_name+" ("+number_to_human_size(@repository.uploaded_file_size)+")"
            %br
          =t 'repositories.max_size'

    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.staff_id', for: :staff_id
      .col-md-5
        = f.collection_select :staff_id, Staff.order(rank_id: :asc, name: :asc), :id, :staff_with_rank, {include_blank: (t 'select')}, {class: 'selectpicker mandatory', "data-width"=>"auto"}

%br
    
        
        
