.row
  .col-md-offset-3
    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.document_title', for: :title
      .col-md-5
        = f.text_field :title, class: 'form-control mandatory'
        
    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.category', for: :category
      .col-md-2
        = f.select :category, Repository::CATEGORY,{ include_blank: (t 'select')}, {class: 'selectpicker form-control mandatory'}
        
    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.uploaded', for: :uploaded
      .col-md-5
        = f.file_field :uploaded, class: 'form-control mandatory'
        
        /NOTE - 20Apr2017 - workaround - to retrieve missing uploaded file when validation fails!  - start ####
        /when "cache for uploaded"(AttachmentUploader record) exist, although uploaded field contains no data...
        - if @aa
          /shall takes id of cache value, upon AttachmentUploader(AU) record creation
          = f.hidden_field :uploadcache, value: @aa
        - else
          /shall takes any value (null or with value of either NEW blank form(uploadcache=nil) or rendered NEW form (uploadcache=nil or uploadcache=id of AU record))
          = f.hidden_field :uploadcache
        /######## - workaround ends here - NOTE - to refer model/attachment_uploader.rb & repository.rb, plus repositories_controller.rb 
        
        .small 
          - if @repository.uploaded.present?
            = (t 'repositories.current_file')+": "+@repository.uploaded_file_name+" ("+number_to_human_size(@repository.uploaded_file_size)+")"
            %br
          =t 'repositories.max_size'
 
    .form-group
      .col-sm-2.control-label
        = f.label t 'repositories.staff_id', for: :staff_id
      .col-md-5
        = f.collection_select :staff_id, Staff.order(rank_id: :asc, name: :asc), :id, :staff_with_rank, {include_blank: (t 'select')}, {class: 'selectpicker mandatory', "data-width"=>"auto"}

%br
    
        
        
